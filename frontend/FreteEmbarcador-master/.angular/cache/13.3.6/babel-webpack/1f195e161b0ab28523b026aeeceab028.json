{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { GenericasService } from '../genericas.service';\nlet GenericaFormComponent = class GenericaFormComponent {\n  constructor(activatedRoute, fb, notification, router, genericaService) {\n    this.activatedRoute = activatedRoute;\n    this.fb = fb;\n    this.notification = notification;\n    this.router = router;\n    this.genericaService = genericaService;\n    this.title = 'Novo país'; // ======================================================================================================================\n\n    this.columns = [{\n      property: 'nickname',\n      label: 'Código'\n    }, {\n      property: 'name',\n      label: 'Descrição'\n    }];\n    this.advancedFilters = [{\n      property: 'nickname',\n      divider: 'Selection Informations',\n      optional: true,\n      gridColumns: 6,\n      label: 'Código'\n    }, {\n      property: 'name',\n      optional: true,\n      gridColumns: 6\n    }];\n    const {\n      id\n    } = this.activatedRoute.snapshot.params;\n    this.id = id;\n  }\n\n  ngOnInit() {\n    this.genericaForm = this.fb.group({\n      filial: [''],\n      tabela: ['', Validators.required],\n      chave: ['', Validators.required],\n      descricao: ['', Validators.required]\n    });\n    this.loadData(this.id);\n  }\n\n  loadData(id) {\n    if (id) {\n      this.genericaService.get(id).subscribe(generica => {\n        this.genericaForm.patchValue(generica);\n        this.title = generica.tabela;\n      });\n    }\n  }\n\n  cancel() {\n    window.history.back();\n  }\n\n  save() {\n    if (this.genericaForm.invalid) {\n      this.markAsDirtyInvalidControls(this.genericaForm.controls);\n      this.notification.warning('Formulário precisa ser preenchido corretamente.');\n      return;\n    }\n\n    const generica = this.genericaForm.value;\n    const operation = !!this.id ? this.genericaService.update(this.id, generica) : this.genericaService.save(generica);\n    const successMessage = !!this.id ? 'Registro de tabela generica atualizado com sucesso' : 'Registro de tabela generica salvo com sucesso';\n    operation.subscribe(() => {\n      this.notification.success(successMessage);\n      this.router.navigate(['app/genericas']);\n    });\n  }\n\n  markAsDirtyInvalidControls(controls) {\n    for (const key in controls) {\n      if (controls.hasOwnProperty(key)) {\n        const control = controls[key];\n\n        if (control.invalid) {\n          control.markAsDirty();\n        }\n      }\n    }\n  }\n\n  fieldFormat(value) {\n    return `${value.label}`; // `${value.nickname} - ${value.label}`;\n  }\n\n};\nGenericaFormComponent = __decorate([Component({\n  selector: 'app-generica-form',\n  templateUrl: './generica-form.component.html',\n  providers: [GenericasService],\n  styleUrls: ['./generica-form.component.css']\n})], GenericaFormComponent);\nexport { GenericaFormComponent };","map":null,"metadata":{},"sourceType":"module"}