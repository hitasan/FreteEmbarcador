{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nlet CidadeFormComponent = class CidadeFormComponent {\n  constructor(activatedRoute, fb, notification, router, cidadeService) {\n    this.activatedRoute = activatedRoute;\n    this.fb = fb;\n    this.notification = notification;\n    this.router = router;\n    this.cidadeService = cidadeService;\n    this.title = 'Nova cidade';\n    this.genreOptions = [{\n      value: 'male',\n      label: 'Masculino'\n    }, {\n      value: 'female',\n      label: 'Feminino'\n    }, {\n      value: 'another',\n      label: 'Outro'\n    }];\n    const {\n      id\n    } = this.activatedRoute.snapshot.params;\n    this.id = id;\n  }\n\n  ngOnInit() {\n    this.cidadeForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      birthday: [''],\n      genre: [''],\n      cpf: ['', Validators.required],\n      zipcode: ['', Validators.required],\n      address_number: []\n    });\n    this.loadData(this.id);\n  }\n\n  loadData(id) {\n    if (id) {\n      this.cidadeService.get(id).subscribe(cidade => {\n        this.cidadeForm.patchValue(cidade);\n        this.title = cidade.name;\n      });\n    }\n  }\n\n  cancel() {\n    window.history.back();\n  }\n\n  save() {\n    if (this.cidadeForm.invalid) {\n      this.markAsDirtyInvalidControls(this.cidadeForm.controls);\n      this.notification.warning('FormulÃ¡rio precisa ser preenchido corretamente.');\n      return;\n    }\n\n    const cidade = this.cidadeForm.value;\n    const operation = !!this.id ? this.cidadeService.update(this.id, cidade) : this.cidadeService.save(cidade);\n    const successMessage = !!this.id ? 'Cidade atualizada com sucesso' : 'Cidade salva com sucesso';\n    operation.subscribe(() => {\n      this.notification.success(successMessage);\n      this.router.navigate(['app/cidades']);\n    });\n  }\n\n  markAsDirtyInvalidControls(controls) {\n    for (const key in controls) {\n      if (controls.hasOwnProperty(key)) {\n        const control = controls[key];\n\n        if (control.invalid) {\n          control.markAsDirty();\n        }\n      }\n    }\n  }\n\n};\nCidadeFormComponent = __decorate([Component({\n  selector: 'app-cidade-form',\n  templateUrl: './cidade-form.component.html',\n  styleUrls: ['./cidade-form.component.css']\n})], CidadeFormComponent);\nexport { CidadeFormComponent };","map":null,"metadata":{},"sourceType":"module"}