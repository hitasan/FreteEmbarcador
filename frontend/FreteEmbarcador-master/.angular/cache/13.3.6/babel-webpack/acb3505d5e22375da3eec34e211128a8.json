{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@po-ui/ng-components\";\nimport * as i4 from \"../unitizador.service\";\nexport let UnitizadorFormComponent = /*#__PURE__*/(() => {\n  class UnitizadorFormComponent {\n    constructor(activatedRoute, fb, notification, router, unitizadorService) {\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.notification = notification;\n      this.router = router;\n      this.unitizadorService = unitizadorService;\n      this.title = 'INCLUIR - Unitizadores';\n      this.isTableLoading = false;\n      this.situacao = '1 - Ativo';\n      this.situacaoOpt = [{\n        label: '1 - Ativo',\n        value: '1 - Ativo'\n      }, {\n        label: '2 - Inativo',\n        value: '2 - Inativo'\n      }];\n      const {\n        id\n      } = this.activatedRoute.snapshot.params;\n      this.id = id;\n    }\n\n    ngOnInit() {\n      this.unitizadorForm = this.fb.group({\n        unitizador: ['', Validators.required],\n        descricao: ['', Validators.required],\n        tara: [''],\n        volume: [0],\n        volOcupado: [0],\n        situacao: ['', Validators.required],\n        identUnitiz: [''],\n        finalidade: ['']\n      });\n      this.loadData(this.id);\n    }\n\n    loadData(id) {\n      if (id) {\n        this.unitizadorService.get(id).subscribe(unitizador => {\n          this.unitizadorForm.patchValue(unitizador);\n          this.title = \"ALTERAR - Unitizadores\";\n        });\n      }\n    }\n\n    cancel() {\n      window.history.back();\n    }\n\n    save() {\n      if (this.unitizadorForm.invalid) {\n        this.markAsDirtyInvalidControls(this.unitizadorForm.controls);\n        this.notification.warning('Formulário precisa ser preenchido corretamente.');\n        return;\n      }\n\n      const unitizador = this.unitizadorForm.value;\n      const operation = !!this.id ? this.unitizadorService.update(this.id, unitizador) : this.unitizadorService.save(unitizador);\n      const successMessage = !!this.id ? 'Unitizador atualizado com sucesso' : 'Unitizador salvo com sucesso';\n      operation.subscribe(() => {\n        this.notification.success(successMessage);\n        this.router.navigate(['app/unitizador']);\n      });\n    }\n\n    markAsDirtyInvalidControls(controls) {\n      for (const key in controls) {\n        if (controls.hasOwnProperty(key)) {\n          const control = controls[key];\n\n          if (control.invalid) {\n            control.markAsDirty();\n          }\n        }\n      }\n    }\n\n  }\n\n  UnitizadorFormComponent.ɵfac = function UnitizadorFormComponent_Factory(t) {\n    return new (t || UnitizadorFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.PoNotificationService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.UnitizadorService));\n  };\n\n  UnitizadorFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UnitizadorFormComponent,\n    selectors: [[\"app-unitizador-form\"]],\n    decls: 13,\n    vars: 11,\n    consts: [[3, \"p-title\", \"p-save\", \"p-cancel\"], [3, \"formGroup\"], [1, \"po-row\"], [\"formControlName\", \"unitizador\", \"p-label\", \"Unitizador\", \"p-required\", \"\", 1, \"po-lg-2\"], [\"formControlName\", \"descricao\", \"p-label\", \"Descri\\u00E7\\u00E3o\", \"p-required\", \"\", 1, \"po-lg-4\"], [\"formControlName\", \"tara\", \"p-label\", \"Tara\", \"p-required\", \"\", \"p-clean\", \"\", 1, \"po-lg-2\", 3, \"ngModel\", \"ngModelChange\"], [\"formControlName\", \"volume\", \"p-label\", \"Volume\", \"p-required\", \"\", \"p-clean\", \"\", 1, \"po-lg-2\", 3, \"ngModel\", \"ngModelChange\"], [\"formControlName\", \"volOcupado\", \"p-label\", \"Vol.Ocupado\", \"p-required\", \"\", \"p-clean\", \"\", 1, \"po-lg-2\", 3, \"ngModel\", \"ngModelChange\"], [\"formControlName\", \"situacao\", \"p-label\", \"Situa\\u00E7\\u00E3o\", \"p-required\", \"\", \"p-clean\", \"\", 1, \"po-lg-2\", 3, \"ngModel\", \"p-options\", \"ngModelChange\"], [\"formControlName\", \"identUnitiz\", \"p-label\", \"Ident. Unitiz.\", \"p-required\", \"\", \"p-clean\", \"\", 1, \"po-lg-2\", 3, \"ngModel\", \"p-options\", \"ngModelChange\"], [\"formControlName\", \"finalidade\", \"p-label\", \"Finalidade\", \"p-required\", \"\", \"p-clean\", \"\", 1, \"po-lg-2\", 3, \"ngModel\", \"p-options\", \"ngModelChange\"]],\n    template: function UnitizadorFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"po-page-edit\", 0);\n        i0.ɵɵlistener(\"p-save\", function UnitizadorFormComponent_Template_po_page_edit_p_save_0_listener() {\n          return ctx.save();\n        })(\"p-cancel\", function UnitizadorFormComponent_Template_po_page_edit_p_cancel_0_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵelementStart(1, \"form\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"po-input\", 3)(4, \"po-input\", 4);\n        i0.ɵɵelementStart(5, \"po-number\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function UnitizadorFormComponent_Template_po_number_ngModelChange_5_listener($event) {\n          return ctx.tara = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"po-number\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function UnitizadorFormComponent_Template_po_number_ngModelChange_6_listener($event) {\n          return ctx.volume = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"po-number\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function UnitizadorFormComponent_Template_po_number_ngModelChange_9_listener($event) {\n          return ctx.volOcupado = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"po-select\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function UnitizadorFormComponent_Template_po_select_ngModelChange_10_listener($event) {\n          return ctx.situacao = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"po-select\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function UnitizadorFormComponent_Template_po_select_ngModelChange_11_listener($event) {\n          return ctx.identUnitiz = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"po-select\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function UnitizadorFormComponent_Template_po_select_ngModelChange_12_listener($event) {\n          return ctx.finalidade = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"p-title\", ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.unitizadorForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.tara);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.volume);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.volOcupado);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.situacao)(\"p-options\", ctx.situacaoOpt);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.identUnitiz)(\"p-options\", ctx.identUnitizOpt);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.finalidade)(\"p-options\", ctx.finalidadeOpt);\n      }\n    },\n    styles: [\"\"]\n  });\n  return UnitizadorFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}