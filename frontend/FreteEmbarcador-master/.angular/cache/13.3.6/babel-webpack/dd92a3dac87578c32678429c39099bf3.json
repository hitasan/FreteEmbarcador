{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../unidadeMedida.service\";\nimport * as i3 from \"@po-ui/ng-components\";\nconst _c0 = [\"advancedModal\"];\nexport let UnidadeMedidaListComponent = /*#__PURE__*/(() => {\n  class UnidadeMedidaListComponent {\n    constructor(router, unidadeMedidaService, dialog) {\n      this.router = router;\n      this.unidadeMedidaService = unidadeMedidaService;\n      this.dialog = dialog;\n      this.isTableLoading = false;\n      this.actions = [{\n        label: 'Adicionar',\n        separator: true,\n        type: 'default',\n        icon: 'po-icon-plus',\n        url: 'app/unidadeMedida/new'\n      }, {\n        label: 'Visualizar',\n        separator: true,\n        type: 'default',\n        icon: 'po-icon-eye',\n        url: 'app/unidadeMedida/detail/${unidadeMedida.id}'\n      }, {\n        label: 'Editar',\n        separator: true,\n        type: 'default',\n        icon: 'po-icon-edit',\n        url: 'app/unidadeMedida/edit/${unidadeMedida.id}'\n      }, {\n        label: 'Excluir',\n        separator: true,\n        type: 'default',\n        icon: 'po-icon-delete',\n        url: 'app/unidadeMedida/detail/${unidadeMedida.id}',\n        type: 'danger'\n      }, {\n        label: 'Importar',\n        separator: true,\n        type: 'default',\n        icon: 'po-icon-upload',\n        action: this.advancedActionModal.bind(this)\n      }];\n      this.tableActions = [{\n        label: 'Editar',\n        separator: true,\n        action: unidadeMedida => this.router.navigate([`app/unidadeMedida/edit/${unidadeMedida.id}`])\n      }, {\n        label: 'Visualizar',\n        separator: true,\n        action: unidadeMedida => this.router.navigate([`app/unidadeMedida/detail/${unidadeMedida.id}`])\n      }, {\n        label: 'Remover',\n        separator: true,\n        separator: true,\n        type: 'danger',\n        icon: 'po-icon-delete',\n        action: this.onRemove.bind(this)\n      }];\n      this.columns = [{\n        label: 'Filial',\n        property: 'filial'\n      }, {\n        label: 'Un. Medida',\n        property: 'uniMedida',\n        width: '5%'\n      }, {\n        label: 'Descrição',\n        property: 'descricao'\n      }];\n      this.advancedSecundaryAction = {\n        label: 'Modelo CSV',\n        action: () => {\n          this.downloadModelo.bind(this);\n        }\n      };\n      this.advancedPrimaryAction = {\n        label: 'Importar',\n        action: () => {\n          this.dialog.confirm({\n            message: 'Tem certeza que deseja importar os dados do arquivo selecionado?',\n            title: 'Importação de unidade de medidas',\n            confirm: this.loadDados.bind(this)\n          }), this.advancedModal.close();\n        }\n      };\n    }\n\n    ngOnInit() {\n      this.isTableLoading = true;\n      this.unidadeMedidaService.getAll().subscribe(unidadeMedida => {\n        this.unidadeMedida = unidadeMedida;\n        this.isTableLoading = false;\n      });\n    }\n\n    onRemove({\n      id\n    }) {\n      this.dialog.confirm({\n        message: 'Tem certeza que deseja remover esta Unidade de Medida?',\n        title: 'Excluir',\n        confirm: this.confirmRemove.bind(this, id)\n      });\n    }\n\n    confirmRemove(id) {\n      this.isTableLoading = true;\n      this.unidadeMedidaService.delete(id).subscribe(() => {\n        this.unidadeMedida = this.unidadeMedida.filter(unidadeMedida => unidadeMedida.id !== id);\n        this.isTableLoading = false;\n      });\n    }\n\n    advancedActionModal() {\n      this.advancedModal.open();\n    }\n\n    downloadModelo() {}\n\n    loadDados() {}\n\n  }\n\n  UnidadeMedidaListComponent.ɵfac = function UnidadeMedidaListComponent_Factory(t) {\n    return new (t || UnidadeMedidaListComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UnidadeMedidaService), i0.ɵɵdirectiveInject(i3.PoDialogService));\n  };\n\n  UnidadeMedidaListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UnidadeMedidaListComponent,\n    selectors: [[\"app-unidadeMedida-list\"]],\n    viewQuery: function UnidadeMedidaListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.advancedModal = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[\"p-title\", \"Unidade de Medida\", 3, \"p-actions\"]],\n    template: function UnidadeMedidaListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"po-page-list\", 0);\n        i0.ɵɵtext(1, \">\\n\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"p-actions\", ctx.actions);\n      }\n    },\n    styles: [\"\"]\n  });\n  return UnidadeMedidaListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}