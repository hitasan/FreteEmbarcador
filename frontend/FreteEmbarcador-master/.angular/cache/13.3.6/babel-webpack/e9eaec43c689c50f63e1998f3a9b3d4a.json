{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nlet PaisesListComponent = class PaisesListComponent {\n  constructor(router, paisService, dialog, http) {\n    this.router = router;\n    this.paisService = paisService;\n    this.dialog = dialog;\n    this.http = http;\n    this.isTableLoading = false;\n    this.actions = [{\n      label: 'Adicionar',\n      icon: 'po-icon-plus',\n      url: 'app/paises/new'\n    }, {\n      label: 'Editar',\n      icon: 'po-icon-edit',\n      url: 'app/paises/edit/${pais.id}'\n    }, {\n      label: 'Visualizar',\n      icon: 'po-icon-eye',\n      url: 'app/paises/detail/${pais.id}'\n    }, {\n      label: 'Excluir',\n      icon: 'po-icon-delete',\n      url: 'app/paises/detail/${pais.id}',\n      type: 'danger'\n    }, {\n      label: 'Importar',\n      icon: 'po-icon-upload',\n      action: this.advancedActionModal.bind(this)\n    }];\n    this.tableActions = [{\n      label: 'Editar',\n      action: pais => this.router.navigate([`app/paises/edit/${pais.id}`])\n    }, {\n      label: 'Visualizar',\n      action: pais => this.router.navigate([`app/paises/detail/${pais.id}`])\n    }, {\n      label: 'Remover',\n      separator: true,\n      type: 'danger',\n      icon: 'po-icon-delete',\n      action: this.onRemove.bind(this)\n    }, {\n      label: 'Copiar',\n      separator: true,\n      icon: 'po-icon po-icon-copy'\n    }];\n    this.columns = [{\n      label: 'Filial',\n      property: 'filial'\n    }, {\n      label: 'Cod. do País',\n      property: 'codigo',\n      width: '5%'\n    }, {\n      label: 'Descrição',\n      property: 'nome'\n    }, {\n      label: 'Sigla',\n      property: 'sigla',\n      width: '5%'\n    }, {\n      label: 'Cod. Abics',\n      property: 'codAbics',\n      width: '7%'\n    }, {\n      label: 'Cod. Fiesp',\n      property: 'codigoFiesp',\n      width: '7%'\n    }, {\n      label: 'Codigo ERP',\n      property: 'codERP',\n      width: '7%'\n    }, {\n      label: 'Cod. País D.U.E.',\n      property: 'codPaisDUE',\n      width: '10%'\n    }];\n    this.advancedSecundaryAction = {\n      label: 'Modelo CSV',\n      action: () => {\n        this.downloadModelo.bind(this), this.advancedModal.close();\n      }\n    };\n    this.advancedPrimaryAction = {\n      label: 'Importar',\n      action: () => {\n        this.dialog.confirm({\n          message: 'Tem certeza que deseja importar os dados do arquivo selecionado?',\n          title: 'Importação de países',\n          confirm: this.loadDados.bind(this)\n        }), this.advancedModal.close();\n      }\n    };\n  }\n\n  ngOnInit() {\n    this.isTableLoading = true;\n    this.paisService.getAll().subscribe(paises => {\n      this.paises = paises;\n      this.isTableLoading = false;\n    });\n  }\n\n  onRemove({\n    id\n  }) {\n    this.dialog.confirm({\n      message: 'Tem certeza que deseja remover este país?',\n      title: 'Exclusão',\n      confirm: this.confirmRemove.bind(this, id)\n    });\n  }\n\n  confirmRemove(id) {\n    this.isTableLoading = true;\n    this.paisService.delete(id).subscribe(() => {\n      this.paises = this.paises.filter(pais => pais.id !== id);\n      this.isTableLoading = false;\n    });\n  }\n\n  advancedActionModal() {\n    this.advancedModal.open();\n  }\n\n  downloadModelo() {\n    this.paisService.getReportFinancial(null).subscribe(respose => {\n      const contentDisposition = respose.headers.get(\"content-disposition\");\n      const filename = this.parseFilenameFromContentDisposition(contentDisposition) + '.pdf';\n      this.createAndDownloadBlobFile(respose.body, {}, filename);\n      console.log(\"Relatório gerado com sucesso!\");\n    }, error => {\n      console.log(\"Houve um erro ao tentar obter os dados.\");\n    });\n  }\n\n  parseFilenameFromContentDisposition(contentDisposition) {\n    if (!contentDisposition) return null;\n    return contentDisposition.split(\";\")[1].split(\"filename\")[1].split(\"=\")[1].trim();\n  } //Esse método faz o download automático no navegador.\n\n\n  createAndDownloadBlobFile(body, options, filename) {\n    var blob = new Blob([body], options);\n\n    if (navigator.msSaveBlob) {\n      // IE 10+\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      var link = document.createElement(\"a\"); // Browsers that support HTML5 download attribute\n\n      if (link.download !== undefined) {\n        var url = URL.createObjectURL(blob);\n        link.setAttribute(\"href\", url);\n        link.setAttribute(\"download\", filename);\n        link.style.visibility = \"hidden\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    }\n  }\n  /*\r\n    private getReportFinancial(params: HttpParams): Observable <any> {\r\n      // Importe o HttpClient  no construtor.\r\n      return this.http.get <any> (`${environment.API_URL}/v1/reports/financial`, {\r\n  \r\n          responseType: 'blob'\r\n          as 'json',\r\n          params,\r\n          observe: 'response'\r\n  \r\n      }).pipe(catchError((error: any) => observableThrowError(error || \"Server error\")));\r\n    }\r\n  */\n\n\n  loadDados() {}\n\n};\n\n__decorate([ViewChild('advancedModal', {\n  static: true\n})], PaisesListComponent.prototype, \"advancedModal\", void 0);\n\nPaisesListComponent = __decorate([Component({\n  selector: 'app-pais-list',\n  templateUrl: './pais-list.component.html',\n  styleUrls: ['./pais-list.component.css']\n})], PaisesListComponent);\nexport { PaisesListComponent };","map":null,"metadata":{},"sourceType":"module"}