{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { UsuarioService } from '../usuario.service';\nlet UsuarioFormComponent = class UsuarioFormComponent {\n  constructor(activatedRoute, fb, notification, router, usuarioService) {\n    this.activatedRoute = activatedRoute;\n    this.fb = fb;\n    this.notification = notification;\n    this.router = router;\n    this.usuarioService = usuarioService;\n    this.title = 'Novo usuário';\n    this.propertiesOptions = [{\n      value: 'required',\n      label: 'Trocar Senha'\n    }, {\n      value: 'block',\n      label: 'Bloquear Login'\n    }];\n    const {\n      id\n    } = this.activatedRoute.snapshot.params;\n    this.id = id;\n  }\n\n  ngOnInit() {\n    this.usuarioForm = this.fb.group({\n      login: ['', Validators.required],\n      nome: ['', Validators.required],\n      senha: ['', Validators.required],\n      email: ['', Validators.required],\n      cargo: [''],\n      status: [''],\n      datastatus: [''],\n      trocasenha: ['']\n    });\n    this.loadData(this.id);\n    this.restore();\n  }\n\n  loadData(id) {\n    if (id) {\n      this.usuarioService.get(id).subscribe(usuario => {\n        this.usuarioForm.patchValue(usuario);\n        this.title = usuario.login;\n      });\n    }\n  }\n\n  restore() {\n    this.input = undefined;\n    this.label = \"Senha\";\n    this.minlength = 6;\n    this.maxlength = 12;\n    this.password = undefined;\n    this.placeholder = 'Informe a senha';\n    this.properties = [];\n  }\n\n  cancel() {\n    window.history.back();\n  }\n\n  save() {\n    if (this.usuarioForm.invalid) {\n      this.markAsDirtyInvalidControls(this.usuarioForm.controls);\n      this.notification.warning('Formulário precisa ser preenchido corretamente.');\n      return;\n    }\n\n    const usuario = this.usuarioForm.value;\n    const operation = !!this.id ? this.usuarioService.update(this.id, usuario) : this.usuarioService.save(usuario);\n    const successMessage = !!this.id ? 'Registro de usuário atualizado com sucesso' : 'Registro salvo com sucesso';\n    operation.subscribe(() => {\n      this.notification.success(successMessage);\n      this.router.navigate(['app/usuarios']);\n    });\n  }\n\n  markAsDirtyInvalidControls(controls) {\n    for (const key in controls) {\n      if (controls.hasOwnProperty(key)) {\n        const control = controls[key];\n\n        if (control.invalid) {\n          control.markAsDirty();\n        }\n      }\n    }\n  }\n\n};\nUsuarioFormComponent = __decorate([Component({\n  selector: 'app-usuario-form',\n  templateUrl: './usuario-form.component.html',\n  providers: [UsuarioService],\n  styleUrls: ['./usuario-form.component.css']\n})], UsuarioFormComponent);\nexport { UsuarioFormComponent };","map":null,"metadata":{},"sourceType":"module"}