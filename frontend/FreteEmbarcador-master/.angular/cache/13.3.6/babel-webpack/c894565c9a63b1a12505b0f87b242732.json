{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { EmpresaService } from '../empresa.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@po-ui/ng-components\";\nimport * as i4 from \"../empresa.service\";\nexport let EmpresaFormComponent = /*#__PURE__*/(() => {\n  class EmpresaFormComponent {\n    constructor(activatedRoute, fb, notification, router, empresaService) {\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.notification = notification;\n      this.router = router;\n      this.empresaService = empresaService;\n      this.title = 'Nova Empresa';\n      const {\n        id\n      } = this.activatedRoute.snapshot.params;\n      this.id = id;\n    }\n\n    ngOnInit() {\n      this.empresaForm = this.fb.group({\n        codigo: ['', Validators.required],\n        descricao: ['', Validators.required]\n      });\n      this.loadData(this.id);\n    }\n\n    loadData(id) {\n      if (id) {\n        this.empresaService.get(id).subscribe(empresa => {\n          this.empresaForm.patchValue(empresa);\n          this.title = \"TESTANDO\".concat(empresa.codigo);\n        });\n      }\n    }\n\n    cancel() {\n      window.history.back();\n    }\n\n    save() {\n      if (this.empresaForm.invalid) {\n        this.markAsDirtyInvalidControls(this.empresaForm.controls);\n        this.notification.warning('Formulário precisa ser preenchido corretamente.');\n        return;\n      }\n\n      const empresa = this.empresaForm.value;\n      const operation = !!this.id ? this.empresaService.update(this.id, empresa) : this.empresaService.save(empresa);\n      const successMessage = !!this.id ? 'Registro de empresa atualizado com sucesso' : 'Registro salvo com sucesso';\n      operation.subscribe(() => {\n        this.notification.success(successMessage);\n        this.router.navigate(['app/empresas']);\n      });\n    }\n\n    markAsDirtyInvalidControls(controls) {\n      for (const key in controls) {\n        if (controls.hasOwnProperty(key)) {\n          const control = controls[key];\n\n          if (control.invalid) {\n            control.markAsDirty();\n          }\n        }\n      }\n    }\n\n  }\n\n  EmpresaFormComponent.ɵfac = function EmpresaFormComponent_Factory(t) {\n    return new (t || EmpresaFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.PoNotificationService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.EmpresaService));\n  };\n\n  EmpresaFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EmpresaFormComponent,\n    selectors: [[\"app-empresa-form\"]],\n    features: [i0.ɵɵProvidersFeature([EmpresaService])],\n    decls: 6,\n    vars: 2,\n    consts: [[3, \"p-title\", \"p-save\", \"p-cancel\"], [3, \"formGroup\"], [1, \"po-row\"], [\"formControlName\", \"codigo\", \"p-label\", \"C\\u00F3digo\", 1, \"po-md-6\", \"po-lg-4\"], [\"formControlName\", \"descricao\", \"p-label\", \"Descri\\u00E7\\u00E3o\", 1, \"po-md-6\", \"po-lg-4\"]],\n    template: function EmpresaFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"po-page-edit\", 0);\n        i0.ɵɵlistener(\"p-save\", function EmpresaFormComponent_Template_po_page_edit_p_save_0_listener() {\n          return ctx.save();\n        })(\"p-cancel\", function EmpresaFormComponent_Template_po_page_edit_p_cancel_0_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵelementStart(1, \"form\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"po-input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelement(5, \"po-input\", 4);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"p-title\", ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.empresaForm);\n      }\n    },\n    directives: [i3.PoPageEditComponent, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i3.PoInputComponent, i2.NgControlStatus, i2.FormControlName],\n    styles: [\"\"]\n  });\n  return EmpresaFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}