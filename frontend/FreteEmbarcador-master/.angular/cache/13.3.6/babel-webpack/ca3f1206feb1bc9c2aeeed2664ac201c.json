{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nlet UnitizadorFormComponent = class UnitizadorFormComponent {\n  constructor(activatedRoute, fb, notification, router, unitizadorService) {\n    this.activatedRoute = activatedRoute;\n    this.fb = fb;\n    this.notification = notification;\n    this.router = router;\n    this.unitizadorService = unitizadorService;\n    this.title = 'INCLUIR - Unitizadores';\n    this.isTableLoading = false;\n    this.tara = 0.000;\n    this.volume = 0.000;\n    this.volOcupado = 0.000;\n    this.situacao = '1 - Ativo';\n    this.identUnitiz = '1 - Nao Informada';\n    this.finalidade = '1 - Faturamento/NF';\n    this.situacaoOpt = [{\n      label: '1 - Ativo',\n      value: '1 - Ativo'\n    }, {\n      label: '2 - Inativo',\n      value: '2 - Inativo'\n    }];\n    this.identUnitizOpt = [{\n      label: '1 - Nao Informada',\n      value: '1 - Nao Informada'\n    }, {\n      label: '2 - Opcional',\n      value: '2 - Opcional'\n    }, {\n      label: '3 - Obrigatoria',\n      value: '3 - Obrigatoria'\n    }];\n    this.finalidadeOpt = [{\n      label: '1 - Faturamento/NF',\n      value: '1 - Faturamento/NF'\n    }, {\n      label: '2 - Patios e Portaria',\n      value: '2 - Patios e Portaria'\n    }, {\n      label: '3 - Ambos',\n      value: '3 - Ambos'\n    }];\n    const {\n      id\n    } = this.activatedRoute.snapshot.params;\n    this.id = id;\n  }\n\n  ngOnInit() {\n    this.unitizadorForm = this.fb.group({\n      unitizador: ['', Validators.required],\n      descricao: ['', Validators.required],\n      tara: [''],\n      volume: [0],\n      volOcupado: [0],\n      situacao: ['', Validators.required],\n      identUnitiz: [''],\n      finalidade: ['']\n    });\n    this.loadData(this.id);\n  }\n\n  loadData(id) {\n    if (id) {\n      this.unitizadorService.get(id).subscribe(unitizador => {\n        this.unitizadorForm.patchValue(unitizador);\n        this.title = \"ALTERAR - Unitizadores\";\n      });\n    }\n  }\n\n  cancel() {\n    window.history.back();\n  }\n\n  save() {\n    if (this.unitizadorForm.invalid) {\n      this.markAsDirtyInvalidControls(this.unitizadorForm.controls);\n      this.notification.warning('FormulÃ¡rio precisa ser preenchido corretamente.');\n      return;\n    }\n\n    const unitizador = this.unitizadorForm.value;\n    const operation = !!this.id ? this.unitizadorService.update(this.id, unitizador) : this.unitizadorService.save(unitizador);\n    const successMessage = !!this.id ? 'Unitizador atualizado com sucesso' : 'Unitizador salvo com sucesso';\n    operation.subscribe(() => {\n      this.notification.success(successMessage);\n      this.router.navigate(['app/unitizador']);\n    });\n  }\n\n  markAsDirtyInvalidControls(controls) {\n    for (const key in controls) {\n      if (controls.hasOwnProperty(key)) {\n        const control = controls[key];\n\n        if (control.invalid) {\n          control.markAsDirty();\n        }\n      }\n    }\n  }\n\n};\nUnitizadorFormComponent = __decorate([Component({\n  selector: 'app-unitizador-form',\n  templateUrl: './unitizador-form.component.html',\n  styleUrls: ['./unitizador-form.component.css']\n})], UnitizadorFormComponent);\nexport { UnitizadorFormComponent };","map":null,"metadata":{},"sourceType":"module"}