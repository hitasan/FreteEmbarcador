{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nlet VeiculoFormComponent = class VeiculoFormComponent {\n  constructor(activatedRoute, fb, notification, router, veiculoService) {\n    this.activatedRoute = activatedRoute;\n    this.fb = fb;\n    this.notification = notification;\n    this.router = router;\n    this.veiculoService = veiculoService;\n    this.title = 'INCLUIR - Veículos';\n    this.isTableLoading = false;\n    this.filial = '';\n    this.codigo = '';\n    this.tipo = '';\n    this.placa = '';\n    this.ufPlaca = '';\n    this.proprietario = '';\n    this.nomePropr = '';\n    this.tpPropri = '2 - Próprio';\n    this.tipoAcesso = '1 - Sem restrições';\n    this.situacao = '1 - Ativo';\n    this.descSituacao = 'CADASTRO';\n    this.dataCadastro = new Date();\n    this.dataSituacao = new Date();\n    this.altura = 0;\n    this.largura = 0;\n    this.comprimento = 0;\n    this.volume = 0;\n    this.tara = 0;\n    this.carga = 0;\n    this.pesoBrutoTotal = 0;\n    this.observacoes = '';\n    this.marcaModelo = '';\n    this.anoFabric = '';\n    this.renavam = '';\n    this.hodometro = 0;\n    this.dataHodometro = new Date();\n    this.nrCIV = '';\n    this.nrCIPP = 0;\n    this.tipoOperacao = '';\n    this.tipoProprOpt = [{\n      label: '1 - Terceiro',\n      value: '1 - Terceiro'\n    }, {\n      label: '2 - Próprio',\n      value: '2 - Próprio'\n    }, {\n      label: '3 - Alugado',\n      value: '3 - Alugado'\n    }, {\n      label: '4 - Outros',\n      value: '4 - Outros'\n    }];\n    this.tipoAcessoOpt = [{\n      label: '1 - Sem restrições',\n      value: '1 - Sem restrições'\n    }, {\n      label: '2 - Sob permissão',\n      value: '2 - Sob permissão'\n    }, {\n      label: '3 - Suspenso',\n      value: '3 - Suspenso'\n    }, {\n      label: '4 - Não permitido',\n      value: '4 - Não permitido'\n    }];\n    this.situacaoOpt = [{\n      label: '1 - Ativo',\n      value: '1 - Ativo'\n    }, {\n      label: '2 - Inativo',\n      value: '2 - Inativo'\n    }]; // ======================================================================================================================\n    // Funções de controle do lookup\n    // ======================================================================================================================\n\n    this.columns = [{\n      property: 'nickname',\n      label: 'Código'\n    }, {\n      property: 'name',\n      label: 'Descrição'\n    }];\n    this.advancedFilters = [{\n      property: 'nickname',\n      divider: 'Selection Informations',\n      optional: true,\n      gridColumns: 6,\n      label: 'Código'\n    }, {\n      property: 'name',\n      optional: true,\n      gridColumns: 6\n    }];\n    const {\n      id\n    } = this.activatedRoute.snapshot.params;\n    this.id = id;\n  }\n\n  ngOnInit() {\n    this.veiculoForm = this.fb.group({\n      filial: [''],\n      codigo: ['', Validators.required],\n      tipo: ['', Validators.required],\n      placa: ['', Validators.required],\n      ufPlaca: [''],\n      proprietario: [''],\n      nomePropr: [''],\n      tpPropri: [''],\n      tipoAcesso: [''],\n      situacao: [''],\n      descSituacao: [''],\n      dataCadastro: [''],\n      dataSituacao: [''],\n      altura: [0],\n      largura: [0],\n      comprimento: [0],\n      volume: [0],\n      tara: [0],\n      carga: [0],\n      pesoBrutoTotal: [0],\n      observacoes: [''],\n      marcaModelo: [''],\n      anoFabric: [''],\n      renavam: [''],\n      hodometro: [0],\n      dataHodometro: [''],\n      nrCIV: [''],\n      nrCIPP: [0],\n      tipoOperacao: ['']\n    });\n    this.loadData(this.id);\n  }\n\n  loadData(id) {\n    if (id) {\n      this.veiculoService.get(id).subscribe(veiculo => {\n        this.veiculoForm.patchValue(veiculo);\n        this.title = \"ALTERAR - Veículos\";\n      });\n    }\n  }\n\n  cancel() {\n    window.history.back();\n  }\n\n  save() {\n    if (this.veiculoForm.invalid) {\n      this.markAsDirtyInvalidControls(this.veiculoForm.controls);\n      this.notification.warning('Formulário precisa ser preenchido corretamente.');\n      return;\n    }\n\n    const veiculo = this.veiculoForm.value;\n    const operation = !!this.id ? this.veiculoService.update(this.id, veiculo) : this.veiculoService.save(veiculo);\n    const successMessage = !!this.id ? 'Veículo atualizado com sucesso' : 'Veículo salvo com sucesso';\n    operation.subscribe(() => {\n      this.notification.success(successMessage);\n      this.router.navigate(['app/veiculo']);\n    });\n  }\n\n  markAsDirtyInvalidControls(controls) {\n    for (const key in controls) {\n      if (controls.hasOwnProperty(key)) {\n        const control = controls[key];\n\n        if (control.invalid) {\n          control.markAsDirty();\n        }\n      }\n    }\n  }\n\n  fieldFormat(value) {\n    return `${value.label}`; // `${value.nickname} - ${value.label}`;\n  }\n\n};\nVeiculoFormComponent = __decorate([Component({\n  selector: 'app-veiculo-form',\n  templateUrl: './veiculo-form.component.html',\n  styleUrls: ['./veiculo-form.component.css']\n})], VeiculoFormComponent);\nexport { VeiculoFormComponent };","map":null,"metadata":{},"sourceType":"module"}