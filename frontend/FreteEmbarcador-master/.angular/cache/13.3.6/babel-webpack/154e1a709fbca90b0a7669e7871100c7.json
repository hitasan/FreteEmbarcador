{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@po-ui/ng-components\";\nimport * as i4 from \"../configparam.service\";\nexport let ConfigParamFormComponent = /*#__PURE__*/(() => {\n  class ConfigParamFormComponent {\n    constructor(activatedRoute, fb, notification, router, configparamService) {\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.notification = notification;\n      this.router = router;\n      this.configparamService = configparamService;\n      this.title = 'Configuração - Parâmetros do sistema';\n      const {\n        id\n      } = this.activatedRoute.snapshot.params;\n      this.id = id;\n    }\n\n    ngOnInit() {\n      this.configparamForm = this.fb.group({\n        filial: [''],\n        parametro: [''],\n        conteudo: [''],\n        descricao: ['']\n      });\n      this.loadData(this.id);\n    }\n\n    loadData(id) {\n      if (id) {\n        this.configparamService.get(id).subscribe(configparam => {\n          this.configparamForm.patchValue(configparam);\n          this.title = \"TESTE FORM_TS\";\n        });\n      }\n    }\n\n    cancel() {\n      window.history.back();\n    }\n\n    save() {\n      if (this.configparamForm.invalid) {\n        this.markAsDirtyInvalidControls(this.configparamForm.controls);\n        this.notification.warning('Formulário precisa ser preenchido corretamente.');\n        return;\n      }\n\n      const configparam = this.configparamForm.value;\n      const operation = !!this.id ? this.configparamService.update(this.id, configparam) : this.configparamService.save(configparam);\n      const successMessage = !!this.id ? 'Configuração de parâmetros atualizado com sucesso' : 'Registro salvo com sucesso';\n      operation.subscribe(() => {\n        this.notification.success(successMessage);\n        this.router.navigate(['app/configparam']);\n      });\n    }\n\n    markAsDirtyInvalidControls(controls) {\n      for (const key in controls) {\n        if (controls.hasOwnProperty(key)) {\n          const control = controls[key];\n\n          if (control.invalid) {\n            control.markAsDirty();\n          }\n        }\n      }\n    }\n\n  }\n\n  ConfigParamFormComponent.ɵfac = function ConfigParamFormComponent_Factory(t) {\n    return new (t || ConfigParamFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.PoNotificationService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.ConfigParamService));\n  };\n\n  ConfigParamFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConfigParamFormComponent,\n    selectors: [[\"app-configparam-form\"]],\n    decls: 7,\n    vars: 2,\n    consts: [[3, \"p-title\", \"p-save\", \"p-cancel\"], [3, \"formGroup\"], [\"p-active\", \"true\", \"p-disabled\", \"false\", \"p-hide\", \"false\", \"p-label\", \"string\", 3, \"p-click\"], [1, \"po-row\"], [\"formControlName\", \"tabela\", \"p-label\", \"Tabela\", 1, \"po-md-6\", \"po-lg-4\"], [\"formControlName\", \"chave\", \"p-label\", \"Chave\", 1, \"po-md-6\", \"po-lg-4\"], [\"formControlName\", \"descricao\", \"p-label\", \"Descricao\", 1, \"po-md-6\", \"po-lg-4\"]],\n    template: function ConfigParamFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"po-page-edit\", 0);\n        i0.ɵɵlistener(\"p-save\", function ConfigParamFormComponent_Template_po_page_edit_p_save_0_listener() {\n          return ctx.save();\n        })(\"p-cancel\", function ConfigParamFormComponent_Template_po_page_edit_p_cancel_0_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵelementStart(1, \"form\", 1)(2, \"po-tab\", 2);\n        i0.ɵɵlistener(\"p-click\", function ConfigParamFormComponent_Template_po_tab_p_click_2_listener() {\n          return ctx.EventEmitter;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelement(4, \"po-input\", 4)(5, \"po-input\", 5)(6, \"po-input\", 6);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"p-title\", ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.configparamForm);\n      }\n    },\n    directives: [i3.PoPageEditComponent, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i3.PoInputComponent, i2.NgControlStatus, i2.FormControlName],\n    styles: [\"\"]\n  });\n  return ConfigParamFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}