{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@po-ui/ng-components\";\nimport * as i4 from \"../prazoEntrega.service\";\n\nconst _c0 = function () {\n  return {\n    \"modalTitle\": \"TipoVeiculo\"\n  };\n};\n\nexport let PrazoEntregaFormComponent = /*#__PURE__*/(() => {\n  class PrazoEntregaFormComponent {\n    constructor(activatedRoute, fb, notification, router, prazoEntregaService) {\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.notification = notification;\n      this.router = router;\n      this.prazoEntregaService = prazoEntregaService;\n      this.title = 'INCLUIR - Prazo de Entrega';\n      this.isTableLoading = false;\n      this.filial = '';\n      this.codTabela = '';\n      this.tipoTabela = '';\n      this.idaVolta = '';\n      this.iniValidade = new Date();\n      this.fimValidade = new Date();\n      this.cidOrigem = '';\n      this.regOrigem = '';\n      this.remetente = '';\n      this.cidDest = '';\n      this.regDest = '';\n      this.destinatario = '';\n      this.tipoOper = '';\n      this.tipoVeiculo = '';\n      this.codGrupo = '';\n      this.transportador = '';\n      this.modal = '';\n      this.tipoPrazo = '';\n      this.prazo = 0;\n      this.distEstimad = 0;\n      this.prioridade = 0;\n      this.classifFrete = '';\n      this.percMaxQuebra = 0;\n      this.fretePeso = 0;\n      this.aliqImposto = 0;\n      this.solicCotacao = '';\n      this.email = '';\n      this.periodoSolic = 0;\n      this.statusSolic = '';\n      this.dataUltAtu = new Date();\n      this.impostoInc = '';\n      this.tipoRef = '';\n      this.proxVigenc = '';\n      this.qtdDiasAnt = 0;\n      this.qtdPrzResp = 0;\n      this.diasLembret = 0;\n      this.tipoFreq = '';\n      this.recorrencia = '';\n      this.modoSolicit = '';\n      this.sitSolicit = '';\n      this.sitEnvioWF = '';\n      this.unidPeso = '';\n      this.dataProxSol = new Date();\n      this.dataSolicEfet = new Date();\n      this.dataLimResp = new Date();\n      this.dataEnvioLemb = new Date();\n      this.dataLembrado = new Date();\n      this.dataResposta = new Date();\n      this.dataRespExp = new Date();\n      this.comunicar = '';\n      this.falhaEnvioWF = '';\n      this.userIncluir = '';\n      this.dataInclusao = new Date();\n      this.userAlterar = '';\n      this.dataAlteracao = new Date();\n      this.rotaOrigem = '';\n      this.rotaDestino = '';\n      this.descTpOper = '';\n      this.descTpVeic = '';\n      this.descGrupo = '';\n      this.descTransp = '';\n      this.descClass = '';\n      this.tipoProprOpt = [{\n        label: '1 - Terceiro',\n        value: '1 - Terceiro'\n      }, {\n        label: '2 - Próprio',\n        value: '2 - Próprio'\n      }, {\n        label: '3 - Alugado',\n        value: '3 - Alugado'\n      }, {\n        label: '4 - Outros',\n        value: '4 - Outros'\n      }]; // ======================================================================================================================\n      // Funções de controle do lookup\n      // ======================================================================================================================\n\n      this.columns = [{\n        property: 'nickname',\n        label: 'Código'\n      }, {\n        property: 'name',\n        label: 'Descrição'\n      }];\n      this.advancedFilters = [{\n        property: 'nickname',\n        divider: 'Selection Informations',\n        optional: true,\n        gridColumns: 6,\n        label: 'Código'\n      }, {\n        property: 'name',\n        optional: true,\n        gridColumns: 6\n      }];\n      const {\n        id\n      } = this.activatedRoute.snapshot.params;\n      this.id = id;\n    }\n\n    ngOnInit() {\n      this.prazoEntregaForm = this.fb.group({\n        filial: [''],\n        codigo: ['', Validators.required]\n      });\n      this.loadData(this.id);\n    }\n\n    loadData(id) {\n      if (id) {\n        this.prazoEntregaService.get(id).subscribe(prazoEntrega => {\n          this.prazoEntregaForm.patchValue(prazoEntrega);\n          this.title = \"ALTERAR - Prazos de Entrega\";\n        });\n      }\n    }\n\n    cancel() {\n      window.history.back();\n    }\n\n    save() {\n      if (this.prazoEntregaForm.invalid) {\n        this.markAsDirtyInvalidControls(this.prazoEntregaForm.controls);\n        this.notification.warning('Formulário precisa ser preenchido corretamente.');\n        return;\n      }\n\n      const prazoEntrega = this.prazoEntregaForm.value;\n      const operation = !!this.id ? this.prazoEntregaService.update(this.id, prazoEntrega) : this.prazoEntregaService.save(prazoEntrega);\n      const successMessage = !!this.id ? 'Prazo de Entrega atualizado com sucesso' : 'Prazo de Entrega salvo com sucesso';\n      operation.subscribe(() => {\n        this.notification.success(successMessage);\n        this.router.navigate(['app/prazoEntrega']);\n      });\n    }\n\n    markAsDirtyInvalidControls(controls) {\n      for (const key in controls) {\n        if (controls.hasOwnProperty(key)) {\n          const control = controls[key];\n\n          if (control.invalid) {\n            control.markAsDirty();\n          }\n        }\n      }\n    }\n\n    fieldFormat(value) {\n      return `${value.label}`; // `${value.nickname} - ${value.label}`;\n    }\n\n  }\n\n  PrazoEntregaFormComponent.ɵfac = function PrazoEntregaFormComponent_Factory(t) {\n    return new (t || PrazoEntregaFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.PoNotificationService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.PrazoEntregaService));\n  };\n\n  PrazoEntregaFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PrazoEntregaFormComponent,\n    selectors: [[\"app-prazoEntrega-form\"]],\n    decls: 13,\n    vars: 13,\n    consts: [[3, \"p-title\", \"p-save\", \"p-cancel\"], [3, \"formGroup\"], [1, \"po-row\"], [\"formControlName\", \"codTabela\", \"p-label\", \"Cod. Tabela\", \"p-required\", \"\", \"p-clean\", \"\", 1, \"po-lg-2\", 3, \"ngModel\", \"ngModelChange\"], [\"formControlName\", \"tipoTabela\", \"p-label\", \"Tipo Tabela\", 1, \"po-lg-3\", 3, \"ngModel\", \"p-options\", \"ngModelChange\"], [\"formControlName\", \"tipo\", \"p-label\", \"Tipo\", \"p-clean\", \"\", 1, \"po-lg-2\", 3, \"ngModel\", \"p-columns\", \"p-field-format\", \"p-advanced-filters\", \"p-literals\", \"ngModelChange\"], [\"formControlName\", \"hodometro\", \"p-label\", \"Vl Hod\\u00F4metro\", \"p-decimals-length\", \"2\", \"p-thousand-maxlength\", \"6\", \"p-icon\", \"po-icon-calculator\", 1, \"po-lg-2\", 3, \"ngModel\", \"ngModelChange\"], [\"formControlName\", \"dataHodometro\", \"p-label\", \"Dt Hod\\u00F4metro\", 1, \"po-lg-2\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function PrazoEntregaFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"po-page-edit\", 0);\n        i0.ɵɵlistener(\"p-save\", function PrazoEntregaFormComponent_Template_po_page_edit_p_save_0_listener() {\n          return ctx.save();\n        })(\"p-cancel\", function PrazoEntregaFormComponent_Template_po_page_edit_p_cancel_0_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵelementStart(1, \"form\", 1)(2, \"div\", 2)(3, \"po-input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function PrazoEntregaFormComponent_Template_po_input_ngModelChange_3_listener($event) {\n          return ctx.codTabela = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"po-select\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function PrazoEntregaFormComponent_Template_po_select_ngModelChange_4_listener($event) {\n          return ctx.tipoTabela = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"div\", 2)(7, \"po-lookup\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function PrazoEntregaFormComponent_Template_po_lookup_ngModelChange_7_listener($event) {\n          return ctx.tipo = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"po-decimal\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function PrazoEntregaFormComponent_Template_po_decimal_ngModelChange_8_listener($event) {\n          return ctx.hodometro = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"po-datepicker\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function PrazoEntregaFormComponent_Template_po_datepicker_ngModelChange_9_listener($event) {\n          return ctx.dataHodometro = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(10, \"br\")(11, \"br\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtext(12, \" private String idaVolta; // Ida e Volta - GUN_DUPSEN private Instant iniValidade; // Inicio Validade - GUN_DATDE private Instant fimValidade; // Fim Validade - GUN_DATATE private String cidOrigem; // Cidade Origem - GUN_NRCIOR private String regOrigem; // Regiao Origem - GUN_NRREOR private String remetente; // Codigo Remetente - GUN_CDREM private String cidDest; // Cidade Destino - GUN_NRCIDS private String regDest; // Regiao Destino - GUN_NRREDS private String destinatario; // Codigo Destinatario - GUN_CDDEST private String tipoOper; // Tipo de Operacao - GUN_CDTPOP private String tipoVeiculo; // Tipo Veiculo - GUN_CDTPVC private String codGrupo; // Cod Grupo Transp - GUN_CDGRP private String transportador; // Transportador - GUN_CDTRP private String modal; // Modal de Transporte - GUN_MODAL private String tipoPrazo; // Tipo Prazo - GUN_TPPRAZ private Integer prazo; // Prazo M\\u00E1ximo de Entrega - GUN_PRAZO private Double distEstimad; // Dist\\u00E2ncia Estimada em KM - GUN_DMEST private Integer prioridade; // N\\u00EDvel de Prioridade - GUN_PRIOR private String classifFrete; // Classificacao de Frete - GUN_CDCLFR private Double percMaxQuebra; // % m\\u00E1ximo quebra de peso - GUN_MAXQBR private Double fretePeso; // Frete Peso de Refer\\u00EAncia - GUN_FRTPES private Double aliqImposto; // Al\\u00EDquota de Imposto - GUN_PERIMP private String solicCotacao; // Solicita Cota\\u00E7\\u00E3o? - GUN_ENVIAE private String email; // Email Solicita\\u00E7\\u00E3o - GUN_EMAIL private Integer periodoSolic; // Per\\u00EDodo de Solicita\\u00E7\\u00E3o - GUN_PERIOD private String statusSolic; // Situa\\u00E7\\u00E3o Solicita\\u00E7\\u00E3o - GUN_STATUS private Instant dataUltAtu; // Data Ultima Atualiza\\u00E7\\u00E3o - GUN_DTATU / GUN_HRATU private String impostoInc; // Imposto Inclu\\u00EDdo? - GUN_IMPINC private String tipoRef; // Tipo Refer\\u00EAncia - GUN_TPREF private String proxVigenc; // Periodo Prox Vigencia - GUN_PERVIG private Integer qtdDiasAnt; // Qtde Dias Anteced\\u00EAncia - GUN_QTDANT private Integer qtdPrzResp; // Qtde Prazo Resposta - GUN_QTDPRZ private Integer diasLembret; // Qtde Dias Lembrete - GUN_QTDLEM private String tipoFreq; // Tipo Frequ\\u00EAncia - GUN_TPFREQ private String recorrencia; // Controle da Recorr\\u00EAncia - GUN_RECOR private String modoSolicit; // Modo de Solicita\\u00E7\\u00E3o - GUN_SOLMOD private String sitSolicit; // Situa\\u00E7\\u00E3o da Solicita\\u00E7\\u00E3o - GUN_SOLSIT private String sitEnvioWF; // Situa\\u00E7ao Envio Workflow - GUN_WFSIT private String unidPeso; // Unidade Med Peso - GUN_UMPESO private Instant dataProxSol; // Data Pr\\u00F3xima Solicita\\u00E7\\u00E3o - GUN_SOLDTP private Instant dataSolicEfet; // Data Efetuada Solicita\\u00E7\\u00E3o\\t- GUN_SOLDTS private Instant dataLimResp; // Data Limite Resposta - GUN_SOLDTU private Instant dataEnvioLemb; // Data Envio Lembrete - GUN_SOLDTL private Instant dataLembrado; // Data Lembrado - GUN_SOLDTB private Instant dataResposta; // Data Resposta - GUN_SOLDTR private Instant dataRespExp; // Data Resposta Expirada - GUN_SOLDTE private String comunicar; // Destinat\\u00E1rios Comunica\\u00E7\\u00E3o\\t- GUN_SOLEMI private String falhaEnvioWF; // Falha Envio Workflow - GUN_SOLMFE private String userIncluir; // Usu\\u00E1rio Cria\\u00E7\\u00E3o - GUN_CRIUSU private Instant dataInclusao; // Data Cria\\u00E7\\u00E3o - GUN_CRIDAT private String userAlterar; // Usu\\u00E1rio Altera\\u00E7\\u00E3o - GUN_ALTUSU private Instant dataAlteracao; rotaOrigem rotaDestino descTpOper descTpVeic descGrupo descTransp descClass\\n\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"p-title\", ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.prazoEntregaForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.codTabela);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.tipoTabela)(\"p-options\", ctx.tipoTabelaOpt);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.tipo)(\"p-columns\", ctx.columns)(\"p-field-format\", ctx.fieldFormat)(\"p-advanced-filters\", ctx.advancedFilters)(\"p-literals\", i0.ɵɵpureFunction0(12, _c0));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.hodometro);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.dataHodometro);\n      }\n    },\n    directives: [i3.PoPageEditComponent, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i3.PoInputComponent, i2.NgControlStatus, i2.FormControlName, i3.PoSelectComponent, i3.PoLookupComponent, i3.PoDecimalComponent, i3.PoDatepickerComponent],\n    styles: [\"\"]\n  });\n  return PrazoEntregaFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}