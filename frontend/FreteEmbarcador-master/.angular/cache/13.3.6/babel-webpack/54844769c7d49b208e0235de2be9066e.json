{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nimport { ParametroService } from '../parametro.service';\nlet ParametroFormComponent = class ParametroFormComponent {\n  constructor(activatedRoute, fb, notification, router, parametroService) {\n    this.activatedRoute = activatedRoute;\n    this.fb = fb;\n    this.notification = notification;\n    this.router = router;\n    this.parametroService = parametroService;\n    this.title = 'Novo parâmetro';\n    const {\n      id\n    } = this.activatedRoute.snapshot.params;\n    this.id = id;\n  }\n\n  ngOnInit() {\n    this.parametroForm = this.fb.group({\n      filial: [''],\n      parametro: ['', Validators.required],\n      conteudo: ['', Validators.required],\n      descricao: ['', Validators.required]\n    });\n    this.loadData(this.id);\n  }\n\n  loadData(id) {\n    if (id) {\n      this.parametroService.get(id).subscribe(parametro => {\n        this.parametroForm.patchValue(parametro);\n        this.title = parametro.parametro;\n      });\n    }\n  }\n\n  cancel() {\n    window.history.back();\n  }\n\n  save() {\n    if (this.parametroForm.invalid) {\n      this.markAsDirtyInvalidControls(this.parametroForm.controls);\n      this.notification.warning('Formulário precisa ser preenchido corretamente.');\n      return;\n    }\n\n    const parametro = this.parametroForm.value;\n    const operation = !!this.id ? this.parametroService.update(this.id, parametro) : this.parametroService.save(parametro);\n    const successMessage = !!this.id ? 'Registro de tabela de parâmetros atualizado com sucesso' : 'Registro salvo com sucesso';\n    operation.subscribe(() => {\n      this.notification.success(successMessage);\n      this.router.navigate(['app/parametros']);\n    });\n  }\n\n  markAsDirtyInvalidControls(controls) {\n    for (const key in controls) {\n      if (controls.hasOwnProperty(key)) {\n        const control = controls[key];\n\n        if (control.invalid) {\n          control.markAsDirty();\n        }\n      }\n    }\n  }\n\n};\nParametroFormComponent = __decorate([Component({\n  selector: 'app-parametro-form',\n  templateUrl: './parametro-form.component.html',\n  providers: [ParametroService],\n  styleUrls: ['./parametro-form.component.css']\n})], ParametroFormComponent);\nexport { ParametroFormComponent };","map":null,"metadata":{},"sourceType":"module"}