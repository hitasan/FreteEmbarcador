{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@po-ui/ng-components\";\nimport * as i4 from \"../tipoDocCarga.service\";\nexport let TipoDocCargaFormComponent = /*#__PURE__*/(() => {\n  class TipoDocCargaFormComponent {\n    constructor(activatedRoute, fb, notification, router, tipoDocCargaService) {\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.notification = notification;\n      this.router = router;\n      this.tipoDocCargaService = tipoDocCargaService;\n      this.title = 'INCLUIR - Tipo de Documento de Carga';\n      this.isTableLoading = false;\n      this.tpTransp = '1';\n      this.sentido = '0';\n      this.tpContab = '1';\n      this.enviaEdiNfe = '2';\n      this.situacao = '1';\n      this.calculoFret = '1';\n      this.emitePreFat = '1';\n      this.dataEntAut = '0';\n      this.tpTranspOpt = [{\n        label: '1 - Normal',\n        value: '1'\n      }, {\n        label: '2 - Retorno',\n        value: '2'\n      }, {\n        label: '3 - Serviço',\n        value: '3'\n      }, {\n        label: '4 - Nenhum',\n        value: '4'\n      }];\n      this.sentidoOpt = [{\n        label: 'Data Informada',\n        value: '0'\n      }, {\n        label: 'Data Criação Doc Carga',\n        value: '1'\n      }];\n      this.tpContabOpt = [{\n        label: 'Data Informada',\n        value: '0'\n      }, {\n        label: 'Data Criação Doc Carga',\n        value: '1'\n      }];\n      this.enviaEdiNfeOpt = [{\n        label: 'Data Informada',\n        value: '0'\n      }, {\n        label: 'Data Criação Doc Carga',\n        value: '1'\n      }];\n      this.situacaoOpt = [{\n        label: 'Data Informada',\n        value: '0'\n      }, {\n        label: 'Data Criação Doc Carga',\n        value: '1'\n      }];\n      this.calculoFretOpt = [{\n        label: 'Data Informada',\n        value: '0'\n      }, {\n        label: 'Data Criação Doc Carga',\n        value: '1'\n      }];\n      this.emitePreFatOpt = [{\n        label: 'Sim',\n        value: '1'\n      }, {\n        label: 'Não',\n        value: '2'\n      }];\n      this.dataEntAutOpt = [{\n        label: 'Data Informada',\n        value: '0'\n      }, {\n        label: 'Data Criação Doc Carga',\n        value: '1'\n      }];\n      const {\n        id\n      } = this.activatedRoute.snapshot.params;\n      this.id = id;\n    }\n\n    ngOnInit() {\n      this.tipoDocCargaForm = this.fb.group({\n        filial: [''],\n        tipo: ['', Validators.required],\n        descricao: ['', Validators.required],\n        tpTransp: [''],\n        sentido: [''],\n        tpContab: [''],\n        enviaEdiNfe: [''],\n        situacao: [''],\n        calculoFret: [''],\n        emitePreFat: [''],\n        dataEntAut: ['']\n      });\n      this.loadData(this.id);\n    }\n\n    loadData(id) {\n      if (id) {\n        this.tipoDocCargaService.get(id).subscribe(tpDocCarga => {\n          this.tipoDocCargaForm.patchValue(tpDocCarga);\n        });\n      }\n    }\n\n    cancel() {\n      window.history.back();\n    }\n\n    save() {\n      if (this.tipoDocCargaForm.invalid) {\n        this.markAsDirtyInvalidControls(this.tipoDocCargaForm.controls);\n        this.notification.warning('Formulário precisa ser preenchido corretamente.');\n        return;\n      }\n\n      const tipoDocCarga = this.tipoDocCargaForm.value;\n      const operation = !!this.id ? this.tipoDocCargaService.update(this.id, tipoDocCarga) : this.tipoDocCargaService.save(tipoDocCarga);\n      const successMessage = !!this.id ? 'Tipo de Documento de Carga atualizado com sucesso' : 'Tipo de Documento de Carga salvo com sucesso';\n      operation.subscribe(() => {\n        this.notification.success(successMessage);\n        this.router.navigate(['app/tipoDocCarga']);\n      });\n    }\n\n    markAsDirtyInvalidControls(controls) {\n      for (const key in controls) {\n        if (controls.hasOwnProperty(key)) {\n          const control = controls[key];\n\n          if (control.invalid) {\n            control.markAsDirty();\n          }\n        }\n      }\n    }\n\n  }\n\n  TipoDocCargaFormComponent.ɵfac = function TipoDocCargaFormComponent_Factory(t) {\n    return new (t || TipoDocCargaFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.PoNotificationService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.TipoDocCargaService));\n  };\n\n  TipoDocCargaFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TipoDocCargaFormComponent,\n    selectors: [[\"app-tipoDocCarga-form\"]],\n    decls: 17,\n    vars: 18,\n    consts: [[3, \"p-title\", \"p-save\", \"p-cancel\"], [3, \"formGroup\"], [1, \"po-row\"], [\"formControlName\", \"tipo\", \"p-label\", \"Tipo\", \"p-required\", \"\", 1, \"po-lg-1\"], [\"formControlName\", \"descricao\", \"p-label\", \"Descri\\u00E7\\u00E3o\", \"p-required\", \"\", 1, \"po-lg-4\"], [\"formControlName\", \"tpTransp\", \"p-label\", \"Tipo Transp.\", \"p-required\", \"\", \"p-clean\", \"\", 1, \"po-lg-2\", 3, \"ngModel\", \"p-options\", \"ngModelChange\"], [\"formControlName\", \"sentido\", \"p-label\", \"Sentido\", \"p-required\", \"\", \"p-clean\", \"\", 1, \"po-lg-2\", 3, \"ngModel\", \"p-options\", \"ngModelChange\"], [\"formControlName\", \"tpContab\", \"p-label\", \"Tipo Contab\", \"p-required\", \"\", \"p-clean\", \"\", 1, \"po-lg-2\", 3, \"ngModel\", \"p-options\", \"ngModelChange\"], [\"formControlName\", \"enviaEdiNfe\", \"p-label\", \"Env EDI/NFE?\", \"p-required\", \"\", \"p-clean\", \"\", 1, \"po-lg-2\", 3, \"ngModel\", \"p-options\", \"ngModelChange\"], [\"formControlName\", \"situacao\", \"p-label\", \"Situa\\u00E7\\u00E3o\", \"p-required\", \"\", \"p-clean\", \"\", 1, \"po-lg-2\", 3, \"ngModel\", \"p-options\", \"ngModelChange\"], [\"formControlName\", \"calculoFret\", \"p-label\", \"C\\u00E1lculo Fret\", \"p-required\", \"\", \"p-clean\", \"\", 1, \"po-lg-2\", 3, \"ngModel\", \"p-options\", \"ngModelChange\"], [\"formControlName\", \"emitePreFat\", \"p-label\", \"Emite Pre-Fat\", \"p-required\", \"\", \"p-clean\", \"\", 1, \"po-lg-2\", 3, \"ngModel\", \"p-options\", \"ngModelChange\"], [\"formControlName\", \"dataEntAut\", \"p-label\", \"Data Entr Aut\", \"p-required\", \"\", 1, \"po-lg-3\", 3, \"ngModel\", \"p-options\", \"ngModelChange\"]],\n    template: function TipoDocCargaFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"po-page-edit\", 0);\n        i0.ɵɵlistener(\"p-save\", function TipoDocCargaFormComponent_Template_po_page_edit_p_save_0_listener() {\n          return ctx.save();\n        })(\"p-cancel\", function TipoDocCargaFormComponent_Template_po_page_edit_p_cancel_0_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵelementStart(1, \"form\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"po-input\", 3)(4, \"po-input\", 4);\n        i0.ɵɵelementStart(5, \"po-select\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function TipoDocCargaFormComponent_Template_po_select_ngModelChange_5_listener($event) {\n          return ctx.tpTransp = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"po-select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function TipoDocCargaFormComponent_Template_po_select_ngModelChange_6_listener($event) {\n          return ctx.sentido = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"po-select\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function TipoDocCargaFormComponent_Template_po_select_ngModelChange_9_listener($event) {\n          return ctx.tpContab = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"po-select\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function TipoDocCargaFormComponent_Template_po_select_ngModelChange_10_listener($event) {\n          return ctx.enviaEdiNfe = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"po-select\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function TipoDocCargaFormComponent_Template_po_select_ngModelChange_11_listener($event) {\n          return ctx.situacao = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"po-select\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function TipoDocCargaFormComponent_Template_po_select_ngModelChange_12_listener($event) {\n          return ctx.calculoFret = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"po-select\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function TipoDocCargaFormComponent_Template_po_select_ngModelChange_13_listener($event) {\n          return ctx.emitePreFat = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementStart(15, \"div\", 2)(16, \"po-select\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function TipoDocCargaFormComponent_Template_po_select_ngModelChange_16_listener($event) {\n          return ctx.dataEntAut = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"p-title\", ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.tipoDocCargaForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.tpTransp)(\"p-options\", ctx.tpTranspOpt);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.sentido)(\"p-options\", ctx.sentidoOpt);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.tpContab)(\"p-options\", ctx.tpContabOpt);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.enviaEdiNfe)(\"p-options\", ctx.enviaEdiNfeOpt);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.situacao)(\"p-options\", ctx.situacaoOpt);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.calculoFret)(\"p-options\", ctx.calculoFretOpt);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.emitePreFat)(\"p-options\", ctx.emitePreFatOpt);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.dataEntAut)(\"p-options\", ctx.dataEntAutOpt);\n      }\n    },\n    directives: [i3.PoPageEditComponent, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i3.PoInputComponent, i2.NgControlStatus, i2.FormControlName, i3.PoSelectComponent],\n    styles: [\"\"]\n  });\n  return TipoDocCargaFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}