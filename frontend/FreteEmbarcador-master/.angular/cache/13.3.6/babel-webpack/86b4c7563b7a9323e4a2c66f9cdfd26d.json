{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@po-ui/ng-components\";\nimport * as i4 from \"../cidades.service\";\n\nconst _c0 = function () {\n  return {\n    \"modalTitle\": \"Estados\"\n  };\n};\n\nconst _c1 = function () {\n  return {\n    \"modalTitle\": \"Paises\"\n  };\n};\n\nconst _c2 = function () {\n  return {\n    value: \"1 - Sim\"\n  };\n};\n\nconst _c3 = function () {\n  return {\n    value: \"2 - N\\u00E3o\"\n  };\n};\n\nconst _c4 = function (a0, a1) {\n  return [a0, a1];\n};\n\nconst _c5 = function () {\n  return {\n    value: \"1 - Ativo\"\n  };\n};\n\nconst _c6 = function () {\n  return {\n    value: \"2 - Inativo\"\n  };\n};\n\nexport let CidadeFormComponent = /*#__PURE__*/(() => {\n  class CidadeFormComponent {\n    constructor(activatedRoute, fb, notification, router, cidadeService) {\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.notification = notification;\n      this.router = router;\n      this.cidadeService = cidadeService;\n      this.title = 'Cidade - INCLUIR';\n      this.isTableLoading = false;\n      this.columnsTbl = [{\n        label: 'Tp Ocorrência',\n        property: 'tpOcor',\n        width: '10%'\n      }, {\n        label: 'Dsc Tp Oco',\n        property: 'descrTpOco'\n      }, {\n        label: '% ISS',\n        property: 'percISS',\n        type: 'number',\n        width: '20%'\n      }]; // ======================================================================================================================\n\n      this.columns = [{\n        property: 'nickname',\n        label: 'Código'\n      }, {\n        property: 'name',\n        label: 'Descrição'\n      }];\n      this.advancedFilters = [{\n        property: 'nickname',\n        divider: 'Selection Informations',\n        optional: true,\n        gridColumns: 6,\n        label: 'Código'\n      }, {\n        property: 'name',\n        optional: true,\n        gridColumns: 6\n      }];\n      const {\n        id\n      } = this.activatedRoute.snapshot.params;\n      this.id = id;\n    }\n\n    ngOnInit() {\n      //this.isTableLoading = true;\n      this.cidadeForm = this.fb.group({\n        cidade: ['', Validators.required],\n        nome: ['', Validators.required],\n        estado: ['', Validators.required],\n        pais: ['', Validators.required],\n        sigla: ['', Validators.required],\n        suframa: [''],\n        cepInicial: [''],\n        cepFinal: [''],\n        percISSFrete: [0],\n        situacao: [''],\n        regiaoRelat: ['']\n      });\n      this.loadData(this.id);\n    }\n\n    loadData(id) {\n      if (id) {\n        this.cidadeService.get(id).subscribe(cidade => {\n          this.cidadeForm.patchValue(cidade);\n          this.title = \"TESTANDO CADASTRO CIDADES\";\n        });\n      }\n    }\n\n    cancel() {\n      window.history.back();\n    }\n\n    save() {\n      if (this.cidadeForm.invalid) {\n        this.markAsDirtyInvalidControls(this.cidadeForm.controls);\n        this.notification.warning('Formulário precisa ser preenchido corretamente.');\n        return;\n      }\n\n      const cidade = this.cidadeForm.value;\n      const operation = !!this.id ? this.cidadeService.update(this.id, cidade) : this.cidadeService.save(cidade);\n      const successMessage = !!this.id ? 'Cidade atualizada com sucesso' : 'Cidade salva com sucesso';\n      operation.subscribe(() => {\n        this.notification.success(successMessage);\n        this.router.navigate(['app/cidades']);\n      });\n    }\n\n    markAsDirtyInvalidControls(controls) {\n      for (const key in controls) {\n        if (controls.hasOwnProperty(key)) {\n          const control = controls[key];\n\n          if (control.invalid) {\n            control.markAsDirty();\n          }\n        }\n      }\n    }\n\n    fieldFormat(value) {\n      return `${value.label}`; // `${value.nickname} - ${value.label}`;\n    }\n\n  }\n\n  CidadeFormComponent.ɵfac = function CidadeFormComponent_Factory(t) {\n    return new (t || CidadeFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.PoNotificationService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.CidadesService));\n  };\n\n  CidadeFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CidadeFormComponent,\n    selectors: [[\"app-cidade-form\"]],\n    decls: 21,\n    vars: 31,\n    consts: [[3, \"p-title\", \"p-save\", \"p-cancel\"], [3, \"formGroup\"], [1, \"po-row\"], [\"formControlName\", \"cidade\", \"p-label\", \"C\\u00F3digo\", 1, \"po-lg-2\"], [\"formControlName\", \"estado\", \"p-field-label\", \"label\", \"p-field-value\", \"label\", \"p-label\", \"Estado\", 1, \"po-lg-2\", 3, \"p-columns\", \"p-field-format\", \"p-advanced-filters\", \"p-literals\"], [\"formControlName\", \"nome\", \"p-label\", \"Nome\", 1, \"po-lg-6\"], [\"formControlName\", \"pais\", \"p-field-label\", \"label\", \"p-field-value\", \"label\", \"p-label\", \"Pa\\u00EDs\", 1, \"po-lg-2\", 3, \"p-columns\", \"p-field-format\", \"p-advanced-filters\", \"p-literals\"], [\"formControlName\", \"nomePais\", \"p-label\", \"Nome Pa\\u00EDs\", \"p-disabled\", \"true\", 1, \"po-lg-6\"], [\"formControlName\", \"sigla\", \"p-label\", \"Sigla\", 1, \"po-lg-2\"], [\"formControlName\", \"suframa\", \"p-label\", \"Suframa\", 1, \"po-lg-2\", 3, \"p-options\"], [\"formControlName\", \"cepInicial\", \"p-mask\", \"99999-999\", \"p-label\", \"CEP Inicial\", 1, \"po-md-2\"], [\"formControlName\", \"cepFinal\", \"p-mask\", \"99999-999\", \"p-label\", \"CEP Final\", 1, \"po-md-2\"], [\"formControlName\", \"percISSFrete\", \"p-mask\", \"999,99999\", \"p-label\", \"% ISS Frete\", 1, \"po-md-3\"], [\"formControlName\", \"situacao\", \"p-label\", \"Situa\\u00E7\\u00E3o\", 1, \"po-lg-2\", 3, \"p-options\"], [\"p-label\", \"% ISS por Tipo de Ocorr\\u00EAncia\", 1, \"po-md-12\"], [\"p-container\", \"shadow\", \"p-checkbox\", \"\", \"p-height\", \"250\", 3, \"p-loading\", \"p-columns\", \"p-selectable\", \"p-single-select\", \"p-sort\", \"p-striped\", \"p-items\"]],\n    template: function CidadeFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"po-page-edit\", 0);\n        i0.ɵɵlistener(\"p-save\", function CidadeFormComponent_Template_po_page_edit_p_save_0_listener() {\n          return ctx.save();\n        })(\"p-cancel\", function CidadeFormComponent_Template_po_page_edit_p_cancel_0_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵelementStart(1, \"form\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"po-input\", 3)(4, \"po-lookup\", 4)(5, \"po-input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelement(7, \"po-lookup\", 6)(8, \"po-input\", 7)(9, \"po-input\", 8)(10, \"po-combo\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 2);\n        i0.ɵɵelement(12, \"po-input\", 10)(13, \"po-input\", 11)(14, \"po-input\", 12)(15, \"po-combo\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵelementStart(17, \"div\", 2);\n        i0.ɵɵelement(18, \"po-divider\", 14)(19, \"br\")(20, \"po-table\", 15);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"p-title\", ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.cidadeForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"p-columns\", ctx.columns)(\"p-field-format\", ctx.fieldFormat)(\"p-advanced-filters\", ctx.advancedFilters)(\"p-literals\", i0.ɵɵpureFunction0(19, _c0));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"p-columns\", ctx.columns)(\"p-field-format\", ctx.fieldFormat)(\"p-advanced-filters\", ctx.advancedFilters)(\"p-literals\", i0.ɵɵpureFunction0(20, _c1));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"p-options\", i0.ɵɵpureFunction2(23, _c4, i0.ɵɵpureFunction0(21, _c2), i0.ɵɵpureFunction0(22, _c3)));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"p-options\", i0.ɵɵpureFunction2(28, _c4, i0.ɵɵpureFunction0(26, _c5), i0.ɵɵpureFunction0(27, _c6)));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"p-loading\", ctx.isTableLoading)(\"p-columns\", ctx.columnsTbl)(\"p-selectable\", true)(\"p-single-select\", true)(\"p-sort\", true)(\"p-striped\", true)(\"p-items\", ctx.percISSTpOcorr);\n      }\n    },\n    directives: [i3.PoPageEditComponent, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i3.PoInputComponent, i2.NgControlStatus, i2.FormControlName, i3.PoLookupComponent, i3.PoComboComponent, i3.PoDividerComponent, i3.PoTableComponent],\n    styles: [\"\"]\n  });\n  return CidadeFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}