{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nlet PaisFormComponent = class PaisFormComponent {\n  constructor(activatedRoute, fb, notification, router, paisService) {\n    this.activatedRoute = activatedRoute;\n    this.fb = fb;\n    this.notification = notification;\n    this.router = router;\n    this.paisService = paisService;\n    this.title = 'Novo país'; // ======================================================================================================================\n\n    this.columnsOptions = [{\n      value: 'id',\n      label: 'Id'\n    }, {\n      value: 'name',\n      label: 'Name'\n    }, {\n      value: 'email',\n      label: 'Email'\n    }];\n    this.fieldLabelOptions = [{\n      value: 'label',\n      label: 'Label'\n    }, ...this.columnsOptions];\n    this.fieldValueOptions = [{\n      value: 'value',\n      label: 'Value'\n    }, ...this.columnsOptions];\n    this.propertiesOptions = [{\n      value: 'clean',\n      label: 'Clean'\n    }, {\n      value: 'disabled',\n      label: 'Disabled'\n    }, {\n      value: 'noAutocomplete',\n      label: 'No Autocomplete'\n    }, {\n      value: 'optional',\n      label: 'Optional'\n    }, {\n      value: 'required',\n      label: 'Required'\n    }, {\n      value: 'infiniteScroll',\n      label: 'Infinite Scroll'\n    }, {\n      value: 'multiple',\n      label: 'Multiple'\n    }, {\n      value: 'autoHeight',\n      label: 'Auto Height'\n    }];\n    this.columnsDefinition = {\n      id: {\n        property: 'id',\n        label: 'Id'\n      },\n      name: {\n        property: 'name',\n        label: 'Name'\n      },\n      email: {\n        property: 'email',\n        label: 'Email'\n      }\n    };\n    const {\n      id\n    } = this.activatedRoute.snapshot.params;\n    this.id = id;\n  }\n\n  ngOnInit() {\n    this.paisForm = this.fb.group({\n      filial: [''],\n      codigo: ['', Validators.required],\n      nome: ['', Validators.required],\n      sigla: [''],\n      idioma: ['', Validators.required],\n      descIdioma: ['', Validators.required],\n      dinalad: [''],\n      naladi: ['', Validators.required],\n      certOrigemAladi: [''],\n      certOrigemComum: [''],\n      certOrigemMercosul: [''],\n      certOrigemSGPC: [''],\n      exigeLincImport: [''],\n      paisIngles: ['', Validators.required],\n      codAbics: [''],\n      codigoRIEX: [''],\n      codSisxomex: [''],\n      codigoFiesp: [''],\n      claveMexico: [''],\n      nacionalidad: [''],\n      codERP: [''],\n      codPaisDUE: ['']\n    });\n    this.loadData(this.id);\n    this.restore();\n  }\n\n  loadData(id) {\n    if (id) {\n      this.paisService.get(id).subscribe(pais => {\n        this.paisForm.patchValue(pais);\n        this.title = pais.nome;\n      });\n    }\n  }\n\n  cancel() {\n    window.history.back();\n  }\n\n  save() {\n    if (this.paisForm.invalid) {\n      this.markAsDirtyInvalidControls(this.paisForm.controls);\n      this.notification.warning('Formulário precisa ser preenchido corretamente.');\n      return;\n    }\n\n    const pais = this.paisForm.value;\n    const operation = !!this.id ? this.paisService.update(this.id, pais) : this.paisService.save(pais);\n    const successMessage = !!this.id ? 'País atualizado com sucesso' : 'País salvo com sucesso';\n    operation.subscribe(() => {\n      this.notification.success(successMessage);\n      this.router.navigate(['app/paises']);\n    });\n  }\n\n  markAsDirtyInvalidControls(controls) {\n    for (const key in controls) {\n      if (controls.hasOwnProperty(key)) {\n        const control = controls[key];\n\n        if (control.invalid) {\n          control.markAsDirty();\n        }\n      }\n    }\n  }\n\n  changeEvent(event) {\n    this.event = event;\n  }\n\n  changeLiterals() {\n    try {\n      this.customLiterals = JSON.parse(this.literals);\n    } catch (_a) {\n      this.customLiterals = undefined;\n    }\n  }\n\n  onFieldFormatChange(event) {\n    try {\n      this.fieldFormat = JSON.parse(event);\n    } catch (_a) {\n      this.fieldFormat = undefined;\n    }\n  }\n\n  changeAdvancedFilters() {\n    try {\n      this.customAdvancedFilters = JSON.parse(this.advancedFilters);\n    } catch (_a) {\n      this.customAdvancedFilters = undefined;\n    }\n  }\n\n  restore() {\n    this.columnsName = ['id', 'name'];\n    this.customLiterals = undefined;\n    this.updateColumns();\n    this.fieldLabel = 'name';\n    this.fieldValue = 'id';\n    this.fieldFormat = undefined;\n    this.formatField = undefined;\n    this.event = undefined;\n    this.filterService = undefined;\n    this.label = undefined;\n    this.literals = undefined;\n    this.help = undefined;\n    this.lookup = undefined;\n    this.placeholder = '';\n    this.properties = [];\n    this.customAdvancedFilters = [];\n  }\n\n  updateColumns() {\n    this.columns = [];\n    this.columnsName.forEach(column => this.columns.push(this.columnsDefinition[column]));\n  }\n\n};\nPaisFormComponent = __decorate([Component({\n  selector: 'app-pais-form',\n  templateUrl: './pais-form.component.html',\n  styleUrls: ['./pais-form.component.css']\n})], PaisFormComponent);\nexport { PaisFormComponent };","map":null,"metadata":{},"sourceType":"module"}