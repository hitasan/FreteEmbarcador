{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@po-ui/ng-components\";\nimport * as i4 from \"../contatoEmitente.service\";\n\nconst _c0 = function () {\n  return {\n    \"modalTitle\": \"Emitentes dispon\\u00EDveis para sele\\u00E7\\u00E3o\"\n  };\n};\n\nconst _c1 = function () {\n  return {\n    value: \"1 - ativo\"\n  };\n};\n\nconst _c2 = function () {\n  return {\n    value: \"2 - Inativo\"\n  };\n};\n\nconst _c3 = function (a0, a1) {\n  return [a0, a1];\n};\n\nconst _c4 = function () {\n  return {\n    value: \"2 - N\\u00E3o\"\n  };\n};\n\nconst _c5 = function () {\n  return {\n    value: \"1 - Sim\"\n  };\n};\n\nexport let ContatoEmitenteFormComponent = /*#__PURE__*/(() => {\n  class ContatoEmitenteFormComponent {\n    constructor(activatedRoute, fb, notification, router, contatoEmitenteService) {\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.notification = notification;\n      this.router = router;\n      this.contatoEmitenteService = contatoEmitenteService;\n      this.title = 'Novo país FORM'; // ======================================================================================================================\n\n      this.columns = [{\n        property: 'nickname',\n        label: 'Código'\n      }, {\n        property: 'name',\n        label: 'Descrição'\n      }];\n      this.advancedFilters = [{\n        property: 'nickname',\n        divider: 'Selection Informations',\n        optional: true,\n        gridColumns: 6,\n        label: 'Código'\n      }, {\n        property: 'name',\n        optional: true,\n        gridColumns: 6\n      }];\n      const {\n        id\n      } = this.activatedRoute.snapshot.params;\n      this.id = id;\n    }\n\n    ngOnInit() {\n      this.contatoEmitenteForm = this.fb.group({\n        codEmitente: ['', Validators.required],\n        sequencia: ['', Validators.required],\n        situacao: ['', Validators.required],\n        nome: ['', Validators.required],\n        apelido: [''],\n        setor: [''],\n        funcao: [''],\n        email: [''],\n        fone1: [''],\n        ramal1: [''],\n        fone2: [''],\n        ramal2: [''],\n        fax: [''],\n        ramalFax: [''],\n        recebePreFat: [''],\n        observecoes: [''],\n        recebeXmlNFe: [''],\n        recebeRef: [''],\n        recebeCotacao: [''],\n        recebeAgendam: [''],\n        recebeContrato: ['']\n      });\n      this.loadData(this.id);\n    }\n\n    loadData(id) {\n      if (id) {\n        this.contatoEmitenteService.get(id).subscribe(contatoEmitente => {\n          this.contatoEmitenteForm.patchValue(contatoEmitente);\n          this.title = \"pais.nome FORM\";\n        });\n      }\n    }\n\n    cancel() {\n      window.history.back();\n    }\n\n    save() {\n      if (this.contatoEmitenteForm.invalid) {\n        this.markAsDirtyInvalidControls(this.contatoEmitenteForm.controls);\n        this.notification.warning('Formulário precisa ser preenchido corretamente.');\n        return;\n      }\n\n      const contatoEmitente = this.contatoEmitenteForm.value;\n      const operation = !!this.id ? this.contatoEmitenteService.update(this.id, contatoEmitente) : this.contatoEmitenteService.save(contatoEmitente);\n      const successMessage = !!this.id ? 'Contato atualizado com sucesso' : 'Contato salvo com sucesso';\n      operation.subscribe(() => {\n        this.notification.success(successMessage);\n        this.router.navigate(['app/contatoEmitente']);\n      });\n    }\n\n    markAsDirtyInvalidControls(controls) {\n      for (const key in controls) {\n        if (controls.hasOwnProperty(key)) {\n          const control = controls[key];\n\n          if (control.invalid) {\n            control.markAsDirty();\n          }\n        }\n      }\n    }\n\n    fieldFormat(value) {\n      return `${value.label}`; // `${value.nickname} - ${value.label}`;\n    }\n\n  }\n\n  ContatoEmitenteFormComponent.ɵfac = function ContatoEmitenteFormComponent_Factory(t) {\n    return new (t || ContatoEmitenteFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.PoNotificationService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.ContatoEmitenteService));\n  };\n\n  ContatoEmitenteFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContatoEmitenteFormComponent,\n    selectors: [[\"app-contatoEmitente-form\"]],\n    decls: 33,\n    vars: 50,\n    consts: [[3, \"p-title\", \"p-save\", \"p-cancel\"], [3, \"formGroup\"], [\"p-label\", \"Emitente\", 1, \"po-md-12\"], [1, \"po-row\"], [\"p-required\", \"true\", \"name\", \"codEmitente\", \"p-field-label\", \"label\", \"p-field-value\", \"label\", \"p-help\", \"Selecione o Emitente\", \"p-label\", \"Emitente\", 1, \"po-md-6\", 3, \"p-columns\", \"p-field-format\", \"p-filter-service\", \"p-advanced-filters\", \"p-literals\"], [\"formControlName\", \"nomeEmit\", \"p-label\", \"Nome\", 1, \"po-lg-4\"], [\"p-label\", \"Contato\", 1, \"po-md-12\"], [\"formControlName\", \"sequencia\", \"p-label\", \"Sequ\\u00EAncia\", 1, \"po-lg-4\"], [\"formControlName\", \"situacao\", \"p-label\", \"Situa\\u00E7\\u00E3o\", 1, \"po-lg-4\", 3, \"p-options\"], [\"formControlName\", \"nome\", \"p-label\", \"Nome\", 1, \"po-lg-4\"], [\"formControlName\", \"apelido\", \"p-label\", \"Atende por\", 1, \"po-lg-4\"], [\"formControlName\", \"setor\", \"p-label\", \"Setor\", 1, \"po-lg-4\"], [\"formControlName\", \"funcao\", \"p-label\", \"Fun\\u00E7\\u00E3o\", 1, \"po-lg-4\"], [\"formControlName\", \"email\", \"p-label\", \"E-mail\", 1, \"po-lg-4\"], [\"formControlName\", \"fone1\", \"p-label\", \"Fone 1\", 1, \"po-lg-2\"], [\"formControlName\", \"ramal1\", \"p-label\", \"Ramal 1\", 1, \"po-lg-1\"], [\"formControlName\", \"fone2\", \"p-label\", \"Fone 2\", 1, \"po-lg-2\"], [\"formControlName\", \"ramal2\", \"p-label\", \"Ramal 2\", 1, \"po-lg-1\"], [\"formControlName\", \"fax\", \"p-label\", \"Fax\", 1, \"po-lg-2\"], [\"formControlName\", \"ramalFax\", \"p-label\", \"Ramal Fax\", 1, \"po-lg-1\"], [\"formControlName\", \"observacoes\", \"p-label\", \"Observa\\u00E7\\u00F5es\", 1, \"po-lg-8\"], [\"formControlName\", \"recebePreFat\", \"p-label\", \"Rec Pre-Fat\", 1, \"po-lg-1\", 3, \"p-options\"], [\"formControlName\", \"recebeXmlNFe\", \"p-label\", \"Rec XML NFe\", 1, \"po-lg-1\", 3, \"p-options\"], [\"formControlName\", \"recebeRef\", \"p-label\", \"Rec Doc Ref\", 1, \"po-lg-1\", 3, \"p-options\"], [\"formControlName\", \"recebeCotacao\", \"p-label\", \"Rec Cota\\u00E7\\u00E3o\", 1, \"po-lg-1\", 3, \"p-options\"], [\"formControlName\", \"recebeAgendam\", \"p-label\", \"Rec Agendam\", 1, \"po-lg-1\", 3, \"p-options\"], [\"formControlName\", \"recebeContrato\", \"p-label\", \"Rec Contrato\", 1, \"po-lg-1\", 3, \"p-options\"]],\n    template: function ContatoEmitenteFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"po-page-edit\", 0);\n        i0.ɵɵlistener(\"p-save\", function ContatoEmitenteFormComponent_Template_po_page_edit_p_save_0_listener() {\n          return ctx.save();\n        })(\"p-cancel\", function ContatoEmitenteFormComponent_Template_po_page_edit_p_cancel_0_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵelement(2, \"po-divider\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelement(4, \"po-lookup\", 4)(5, \"po-input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"br\")(7, \"po-divider\", 6);\n        i0.ɵɵelementStart(8, \"div\", 3);\n        i0.ɵɵelement(9, \"po-input\", 7)(10, \"po-combo\", 8)(11, \"po-input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 3);\n        i0.ɵɵelement(13, \"po-input\", 10)(14, \"po-input\", 11)(15, \"po-input\", 12)(16, \"po-input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 3);\n        i0.ɵɵelement(18, \"po-input\", 14)(19, \"po-input\", 15)(20, \"po-input\", 16)(21, \"po-input\", 17)(22, \"po-input\", 18)(23, \"po-input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 3);\n        i0.ɵɵelement(25, \"po-input\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 3);\n        i0.ɵɵelement(27, \"po-combo\", 21)(28, \"po-combo\", 22)(29, \"po-combo\", 23)(30, \"po-combo\", 24)(31, \"po-combo\", 25)(32, \"po-combo\", 26);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"p-title\", ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.contatoEmitenteForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"p-columns\", ctx.columns)(\"p-field-format\", ctx.fieldFormat)(\"p-filter-service\", ctx.contatoEmitenteService)(\"p-advanced-filters\", ctx.advancedFilters)(\"p-literals\", i0.ɵɵpureFunction0(14, _c0));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"p-options\", i0.ɵɵpureFunction2(17, _c3, i0.ɵɵpureFunction0(15, _c1), i0.ɵɵpureFunction0(16, _c2)));\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"p-options\", i0.ɵɵpureFunction2(22, _c3, i0.ɵɵpureFunction0(20, _c4), i0.ɵɵpureFunction0(21, _c5)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"p-options\", i0.ɵɵpureFunction2(27, _c3, i0.ɵɵpureFunction0(25, _c4), i0.ɵɵpureFunction0(26, _c5)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"p-options\", i0.ɵɵpureFunction2(32, _c3, i0.ɵɵpureFunction0(30, _c4), i0.ɵɵpureFunction0(31, _c5)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"p-options\", i0.ɵɵpureFunction2(37, _c3, i0.ɵɵpureFunction0(35, _c4), i0.ɵɵpureFunction0(36, _c5)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"p-options\", i0.ɵɵpureFunction2(42, _c3, i0.ɵɵpureFunction0(40, _c4), i0.ɵɵpureFunction0(41, _c5)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"p-options\", i0.ɵɵpureFunction2(47, _c3, i0.ɵɵpureFunction0(45, _c4), i0.ɵɵpureFunction0(46, _c5)));\n      }\n    },\n    directives: [i3.PoPageEditComponent, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i3.PoDividerComponent, i3.PoLookupComponent, i3.PoInputComponent, i2.NgControlStatus, i2.FormControlName, i3.PoComboComponent],\n    styles: [\"\"]\n  });\n  return ContatoEmitenteFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}