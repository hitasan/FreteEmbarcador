{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../contatoEmitentes.service\";\nimport * as i3 from \"@po-ui/ng-components\";\nconst _c0 = [\"advancedModal\"];\nexport let ContatoEmitenteListComponent = /*#__PURE__*/(() => {\n  class ContatoEmitenteListComponent {\n    /*\r\n      readonly tableActions: Array<PoTableAction> = [ // Comentar apos botões funcionarem pois ações dever ser pelo botões para nao ter menu em cada item da tabela\r\n        { label: 'Visualizar', action: contatoEmitentes => this.router.navigate([`app/contatoEmitentes/detail/${contatoEmitentes.id}`]) },\r\n        { label: 'Editar', action: contatoEmitentes => this.router.navigate([`app/contatoEmitentes/edit/${contatoEmitentes.id}`])},\r\n        { label: 'Remover', separator: true, type: 'danger', icon: 'po-icon-delete', action: this.onRemove.bind(this) },\r\n        { label: 'Copiar', separator: true, icon: 'po-icon po-icon-copy' }\r\n      ];\r\n    \r\n      readonly columns: Array<PoTableColumn> = [{ label: 'Sequência', property: 'sequencia', width: '5%' },\r\n                                                { label: 'Situação', property: 'situacao', width: '5%' },\r\n                                                { label: 'Nome', property: 'nome'},\r\n                                                { label: 'Atende por', property: 'apelido', width: '10%' },\r\n                                                { label: 'Setor', property: 'setor', width: '5%' },\r\n                                                { label: 'Função', property: 'funcao', width: '5%' },\r\n                                                { label: 'E-mail', property: 'email'},\r\n                                                { label: 'Fone 1', property: 'fone1', width: '5%' },\r\n                                                { label: 'Ramal 1', property: 'ramal1', width: '5%' },\r\n                                                { label: 'Fone 2', property: 'fone2', width: '5%' },\r\n                                                { label: 'Ramal 2', property: 'ramal2', width: '5%' },\r\n                                                { label: 'Rec. Pre-Fat', property: 'recebepreFat', width: '5%' },\r\n                                                { label: 'Rec. Xml NFe', property: 'recebeXmlNFe', width: '5%' },\r\n                                                { label: 'Rec. Doc. Ref', property: 'recebeRef', width: '5%' },\r\n                                                { label: 'Rec. Cotação', property: 'recebeCotacao', width: '5%' }\r\n      ];\r\n    */\n    constructor(router, contatoEmitenteService, dialog) {\n      this.router = router;\n      this.contatoEmitenteService = contatoEmitenteService;\n      this.dialog = dialog;\n      this.isTableLoading = false;\n      this.actions = [{\n        label: 'Adicionar',\n        icon: 'po-icon-plus',\n        url: 'app/contatoEmitentes/new'\n      }, {\n        label: 'Visualizar',\n        icon: 'po-icon-eye',\n        url: 'app/contatoEmitentes/detail/${contatoEmitentes.id}'\n      }, {\n        label: 'Editar',\n        icon: 'po-icon-edit',\n        url: 'app/contatoEmitentes/edit/${contatoEmitentes.id}'\n      }, {\n        label: 'Excluir',\n        icon: 'po-icon-delete',\n        url: 'app/paises/detail/${contatoEmitentes.id}',\n        type: 'danger'\n      }, {\n        label: 'Importar',\n        icon: 'po-icon-upload',\n        action: this.advancedActionModal.bind(this)\n      }];\n      this.advancedSecundaryAction = {\n        label: 'Modelo CSV',\n        action: () => {\n          this.downloadModelo.bind(this);\n        }\n      };\n      this.advancedPrimaryAction = {\n        label: 'Importar',\n        action: () => {\n          this.dialog.confirm({\n            message: 'Tem certeza que deseja importar os dados do arquivo selecionado?',\n            title: 'Importação de Contato de Emitente',\n            confirm: this.loadDados.bind(this)\n          }), this.advancedModal.close();\n        }\n      };\n    }\n\n    advancedActionModal() {\n      this.advancedModal.open();\n    }\n\n    downloadModelo() {}\n\n    loadDados() {}\n\n  }\n\n  ContatoEmitenteListComponent.ɵfac = function ContatoEmitenteListComponent_Factory(t) {\n    return new (t || ContatoEmitenteListComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ContatoEmitenteService), i0.ɵɵdirectiveInject(i3.PoDialogService));\n  };\n\n  ContatoEmitenteListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContatoEmitenteListComponent,\n    selectors: [[\"app-contatoEmitentes-list\"]],\n    viewQuery: function ContatoEmitenteListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.advancedModal = _t.first);\n      }\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"p-title\", \"Contato de Emitente\", 3, \"p-actions\"]],\n    template: function ContatoEmitenteListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"po-page-list\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"p-actions\", ctx.actions);\n      }\n    },\n    styles: [\"\"]\n  });\n  return ContatoEmitenteListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}