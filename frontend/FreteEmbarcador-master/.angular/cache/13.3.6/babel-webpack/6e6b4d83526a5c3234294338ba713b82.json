{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { Component } from '@angular/core';\nlet TipoDocCargaFormComponent = class TipoDocCargaFormComponent {\n  constructor(activatedRoute, fb, notification, router, tipoDocCargaService) {\n    this.activatedRoute = activatedRoute;\n    this.fb = fb;\n    this.notification = notification;\n    this.router = router;\n    this.tipoDocCargaService = tipoDocCargaService;\n    this.title = 'INCLUIR - Tipo de Documento de Carga';\n    this.isTableLoading = false;\n    this.tpTransp = '1 - Normal';\n    this.sentido = '0 - Indiferente';\n    this.tpContab = '1 - Despesa';\n    this.enviaEdiNfe = '2 - Não';\n    this.situacao = '1 - Ativo';\n    this.calculoFret = '1 - Manual';\n    this.emitePreFat = '1 - Sim';\n    this.dataEntAut = '0 - Data Informada';\n    this.tpTranspOpt = [{\n      label: '1 - Normal',\n      value: '1 - Normal'\n    }, {\n      label: '2 - Retorno',\n      value: '2 - Retorno'\n    }, {\n      label: '3 - Serviço',\n      value: '3 - Serviço'\n    }, {\n      label: '4 - Nenhum',\n      value: '4 - Nenhum'\n    }];\n    this.sentidoOpt = [{\n      label: '0 - Indiferente',\n      value: '0 - Indiferente'\n    }, {\n      label: '1 - Entrada',\n      value: '1 - Entrada'\n    }, {\n      label: '2 - Saída',\n      value: '2 - Saída'\n    }, {\n      label: '3 - Externo',\n      value: '3 - Externo'\n    }, {\n      label: '4 - Interno',\n      value: '4 - Interno'\n    }];\n    this.tpContabOpt = [{\n      label: '1 - Despesa',\n      value: '1 - Despesa'\n    }, {\n      label: '2 - Custo',\n      value: '2 - Custo'\n    }, {\n      label: '3 - Nenhum',\n      value: '3 - Nenhum'\n    }, {\n      label: '4 - Uso Doc Carga',\n      value: '4 - Uso Doc Carga'\n    }];\n    this.enviaEdiNfeOpt = [{\n      label: '1 - Sim',\n      value: '1 - Sim'\n    }, {\n      label: '2 - Não',\n      value: '2 - Não'\n    }];\n    this.situacaoOpt = [{\n      label: '1 - Ativo',\n      value: '1 - Ativo'\n    }, {\n      label: '2 - Inativo',\n      value: '2 - Inativo'\n    }];\n    this.calculoFretOpt = [{\n      label: '1 - Manual',\n      value: '1 - Manual'\n    }, {\n      label: '2 - Automático',\n      value: '2 - Automático'\n    }];\n    this.emitePreFatOpt = [{\n      label: '1 - Sim',\n      value: '1 - Sim'\n    }, {\n      label: '2 - Não',\n      value: '2 - Não'\n    }];\n    this.dataEntAutOpt = [{\n      label: '0 - Data Informada',\n      value: '0 - Data Informada'\n    }, {\n      label: '1 - Data Criação Doc Carga',\n      value: '1 - Data Criação Doc Carga'\n    }];\n    const {\n      id\n    } = this.activatedRoute.snapshot.params;\n    this.id = id;\n  }\n\n  ngOnInit() {\n    this.tipoDocCargaForm = this.fb.group({\n      filial: [''],\n      tipo: ['', Validators.required],\n      descricao: ['', Validators.required],\n      tpTransp: [''],\n      sentido: [''],\n      tpContab: [''],\n      enviaEdiNfe: [''],\n      situacao: [''],\n      calculoFret: [''],\n      emitePreFat: [''],\n      dataEntAut: ['']\n    });\n    this.loadData(this.id);\n  }\n\n  loadData(id) {\n    if (id) {\n      this.tipoDocCargaService.get(id).subscribe(tpDocCarga => {\n        this.tipoDocCargaForm.patchValue(tpDocCarga);\n        this.title = \"ALTERAR - Tipo de Documento de Carga\";\n      });\n    }\n  }\n\n  cancel() {\n    window.history.back();\n  }\n\n  save() {\n    if (this.tipoDocCargaForm.invalid) {\n      this.markAsDirtyInvalidControls(this.tipoDocCargaForm.controls);\n      this.notification.warning('Formulário precisa ser preenchido corretamente.');\n      return;\n    }\n\n    const tipoDocCarga = this.tipoDocCargaForm.value;\n    const operation = !!this.id ? this.tipoDocCargaService.update(this.id, tipoDocCarga) : this.tipoDocCargaService.save(tipoDocCarga);\n    const successMessage = !!this.id ? 'Tipo de Documento de Carga atualizado com sucesso' : 'Tipo de Documento de Carga salvo com sucesso';\n    operation.subscribe(() => {\n      this.notification.success(successMessage);\n      this.router.navigate(['app/tipoDocCarga']);\n    });\n  }\n\n  markAsDirtyInvalidControls(controls) {\n    for (const key in controls) {\n      if (controls.hasOwnProperty(key)) {\n        const control = controls[key];\n\n        if (control.invalid) {\n          control.markAsDirty();\n        }\n      }\n    }\n  }\n\n};\nTipoDocCargaFormComponent = __decorate([Component({\n  selector: 'app-tipoDocCarga-form',\n  templateUrl: './tipoDocCarga-form.component.html',\n  styleUrls: ['./tipoDocCarga-form.component.css']\n})], TipoDocCargaFormComponent);\nexport { TipoDocCargaFormComponent };","map":null,"metadata":{},"sourceType":"module"}