{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@po-ui/ng-components\";\nimport * as i4 from \"../prazoEntrega.service\";\nexport let PrazoEntregaFormComponent = /*#__PURE__*/(() => {\n  class PrazoEntregaFormComponent {\n    constructor(activatedRoute, fb, notification, router, prazoEntregaService) {\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.notification = notification;\n      this.router = router;\n      this.prazoEntregaService = prazoEntregaService;\n      this.title = 'INCLUIR - Prazo de Entrega';\n      this.isTableLoading = false;\n      this.filial = '';\n      this.codTabela = '';\n      this.tipoTabela = '1 - Prazo';\n      this.idaVolta = '2 - Não';\n      this.iniValidade = new Date();\n      this.fimValidade = new Date();\n      this.cidOrigem = '';\n      this.regOrigem = '';\n      this.remetente = '';\n      this.cidDest = '';\n      this.regDest = '';\n      this.destinatario = '';\n      this.tipoOper = '';\n      this.tipoVeiculo = '';\n      this.codGrupo = '';\n      this.transportador = '';\n      this.modal = '1 - Indiferente';\n      this.tipoPrazo = '0 - Dias Uteis';\n      this.prazo = 0;\n      this.prioridade = 0;\n      this.classifFrete = '';\n      this.rotaOrigem = '';\n      this.rotaDestino = '';\n      this.descTpOper = '';\n      this.descTpVeic = '';\n      this.descGrupo = '';\n      this.descTransp = '';\n      this.descClass = '';\n      this.tipoTabelaOpt = [{\n        label: '1 - Prazo',\n        value: '1 - Prazo'\n      }, {\n        label: '2 - Distância',\n        value: '2 - Distância'\n      }];\n      this.idaVoltaOpt = [{\n        label: '1 - Sim',\n        value: '1 - Sim'\n      }, {\n        label: '2 - Não',\n        value: '2 - Não'\n      }];\n      this.modalOpt = [{\n        label: '1 - Indiferente',\n        value: '1 - Indiferente'\n      }, {\n        label: '2 - Rodoviario',\n        value: '2 - Rodoviario'\n      }, {\n        label: '3 - Ferroviario',\n        value: '3 - Ferroviario'\n      }, {\n        label: '4 - Aereo',\n        value: '4 - Aereo'\n      }, {\n        label: '5 - Aquaviario',\n        value: '5 - Aquaviario'\n      }, {\n        label: '6 - Dutoviario',\n        value: '6 - Dutoviario'\n      }, {\n        label: '7 - Multimodal',\n        value: '7 - Multimodal'\n      }];\n      this.tipoPrazoOpt = [{\n        label: '0 - Dias Uteis',\n        value: '0 - Dias Uteis'\n      }, {\n        label: '1 - Dias Corridos',\n        value: '1 - Dias Corridos'\n      }, {\n        label: '2 - Horas',\n        value: '2 - Horas'\n      }]; // ======================================================================================================================\n      // Funções de controle do lookup\n      // ======================================================================================================================\n\n      this.columns = [{\n        property: 'nickname',\n        label: 'Código'\n      }, {\n        property: 'name',\n        label: 'Descrição'\n      }];\n      this.advancedFilters = [{\n        property: 'nickname',\n        divider: 'Selection Informations',\n        optional: true,\n        gridColumns: 6,\n        label: 'Código'\n      }, {\n        property: 'name',\n        optional: true,\n        gridColumns: 6\n      }];\n      const {\n        id\n      } = this.activatedRoute.snapshot.params;\n      this.id = id;\n    }\n\n    ngOnInit() {\n      this.prazoEntregaForm = this.fb.group({\n        filial: [''],\n        codigo: ['', Validators.required]\n      });\n      this.loadData(this.id);\n    }\n\n    loadData(id) {\n      if (id) {\n        this.prazoEntregaService.get(id).subscribe(prazoEntrega => {\n          this.prazoEntregaForm.patchValue(prazoEntrega);\n          this.title = \"ALTERAR - Prazos de Entrega\";\n        });\n      }\n    }\n\n    cancel() {\n      window.history.back();\n    }\n\n    save() {\n      if (this.prazoEntregaForm.invalid) {\n        this.markAsDirtyInvalidControls(this.prazoEntregaForm.controls);\n        this.notification.warning('Formulário precisa ser preenchido corretamente.');\n        return;\n      }\n\n      const prazoEntrega = this.prazoEntregaForm.value;\n      const operation = !!this.id ? this.prazoEntregaService.update(this.id, prazoEntrega) : this.prazoEntregaService.save(prazoEntrega);\n      const successMessage = !!this.id ? 'Prazo de Entrega atualizado com sucesso' : 'Prazo de Entrega salvo com sucesso';\n      operation.subscribe(() => {\n        this.notification.success(successMessage);\n        this.router.navigate(['app/prazoEntrega']);\n      });\n    }\n\n    markAsDirtyInvalidControls(controls) {\n      for (const key in controls) {\n        if (controls.hasOwnProperty(key)) {\n          const control = controls[key];\n\n          if (control.invalid) {\n            control.markAsDirty();\n          }\n        }\n      }\n    }\n\n    fieldFormat(value) {\n      return `${value.label}`; // `${value.nickname} - ${value.label}`;\n    }\n\n  }\n\n  PrazoEntregaFormComponent.ɵfac = function PrazoEntregaFormComponent_Factory(t) {\n    return new (t || PrazoEntregaFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.PoNotificationService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.PrazoEntregaService));\n  };\n\n  PrazoEntregaFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PrazoEntregaFormComponent,\n    selectors: [[\"app-prazoEntrega-form\"]],\n    decls: 13,\n    vars: 10,\n    consts: [[3, \"p-title\", \"p-save\", \"p-cancel\"], [3, \"formGroup\"], [\"p-label\", \"Identifica\\u00E7\\u00E3o\", 1, \"po-md-12\"], [1, \"po-row\"], [\"formControlName\", \"codTabela\", \"p-label\", \"Cod. Tabela\", \"p-disabled\", \"\", 1, \"po-lg-2\", 3, \"ngModel\", \"ngModelChange\"], [\"formControlName\", \"tipoTabela\", \"p-label\", \"Tipo Tabela\", \"p-disabled\", \"\", 1, \"po-lg-3\", 3, \"ngModel\", \"p-options\", \"ngModelChange\"], [\"formControlName\", \"idaVolta\", \"p-label\", \"Ida e Volta\", 1, \"po-lg-2\", 3, \"ngModel\", \"p-options\", \"ngModelChange\"], [\"formControlName\", \"iniValidade\", \"p-label\", \"Ini. Validade\", 1, \"po-lg-2\", 3, \"ngModel\", \"ngModelChange\"], [\"formControlName\", \"fimValidade\", \"p-label\", \"Fim Validade\", 1, \"po-lg-2\", 3, \"ngModel\", \"ngModelChange\"], [\"formControlName\", \"prioridade\", \"p-label\", \"Prioridade\", \"p-required\", \"\", \"p-clean\", \"\", 1, \"po-lg-2\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function PrazoEntregaFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"po-page-edit\", 0);\n        i0.ɵɵlistener(\"p-save\", function PrazoEntregaFormComponent_Template_po_page_edit_p_save_0_listener() {\n          return ctx.save();\n        })(\"p-cancel\", function PrazoEntregaFormComponent_Template_po_page_edit_p_cancel_0_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵelement(2, \"po-divider\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"po-input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function PrazoEntregaFormComponent_Template_po_input_ngModelChange_4_listener($event) {\n          return ctx.codTabela = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"po-select\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function PrazoEntregaFormComponent_Template_po_select_ngModelChange_5_listener($event) {\n          return ctx.tipoTabela = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"po-select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function PrazoEntregaFormComponent_Template_po_select_ngModelChange_6_listener($event) {\n          return ctx.idaVolta = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"po-datepicker\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function PrazoEntregaFormComponent_Template_po_datepicker_ngModelChange_7_listener($event) {\n          return ctx.iniValidade = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"po-datepicker\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function PrazoEntregaFormComponent_Template_po_datepicker_ngModelChange_8_listener($event) {\n          return ctx.fimValidade = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"div\", 3)(11, \"po-input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function PrazoEntregaFormComponent_Template_po_input_ngModelChange_11_listener($event) {\n          return ctx.prioridade = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(12, \"br\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"p-title\", ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.prazoEntregaForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.codTabela);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.tipoTabela)(\"p-options\", ctx.tipoTabelaOpt);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.idaVolta)(\"p-options\", ctx.idaVoltaOpt);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.iniValidade);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.fimValidade);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.prioridade);\n      }\n    },\n    directives: [i3.PoPageEditComponent, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i3.PoDividerComponent, i3.PoInputComponent, i2.NgControlStatus, i2.FormControlName, i3.PoSelectComponent, i3.PoDatepickerComponent],\n    styles: [\"\"]\n  });\n  return PrazoEntregaFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}