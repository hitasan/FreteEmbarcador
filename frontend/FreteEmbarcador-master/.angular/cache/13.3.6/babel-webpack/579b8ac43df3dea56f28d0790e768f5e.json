{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@po-ui/ng-components\";\nimport * as i4 from \"../paises.service\";\nexport let PaisFormComponent = /*#__PURE__*/(() => {\n  class PaisFormComponent {\n    constructor(activatedRoute, fb, notification, router, paisService) {\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.notification = notification;\n      this.router = router;\n      this.paisService = paisService;\n      this.title = 'Novo país';\n      this.genreOptions = [{\n        value: 'male',\n        label: 'Masculino'\n      }, {\n        value: 'female',\n        label: 'Feminino'\n      }, {\n        value: 'another',\n        label: 'Outro'\n      }];\n      const {\n        id\n      } = this.activatedRoute.snapshot.params;\n      this.id = id;\n    }\n\n    ngOnInit() {\n      this.paisForm = this.fb.group({\n        /*filial: [''],\r\n        codigo: ['', Validators.required],\r\n        nome: ['', Validators.required],\r\n        sigla: [''],\r\n        idioma: ['', Validators.required],\r\n        descIdioma: ['', Validators.required],\r\n        dinalad: [''],\r\n        naladi: ['', Validators.required],\r\n        certOrigemAladi: [''],\r\n        certOrigemComum: [''],\r\n        certOrigemMercosul: [''],\r\n        certOrigemSGPC: [''],\r\n        exigeLincImport: [''],\r\n        paisIngles: ['', Validators.required],\r\n        codAbics: [''],\r\n        codigoRIEX: [''],\r\n        codSisxomex: [''],\r\n        codigoFiesp: [''],\r\n        claveMexico: [''],\r\n        nacionalidad: [''],\r\n        codERP: [''],\r\n        codPaisDUE: ['']*/\n        name: ['', Validators.required],\n        email: ['', Validators.required],\n        birthday: [''],\n        genre: [''],\n        cpf: ['', Validators.required],\n        zipcode: ['', Validators.required],\n        address_number: []\n      });\n      this.loadData(this.id);\n    }\n\n    loadData(id) {\n      if (id) {\n        this.paisService.get(id).subscribe(pais => {\n          this.paisForm.patchValue(pais);\n          this.title = pais.name;\n        });\n      }\n    }\n\n    cancel() {\n      window.history.back();\n    }\n\n    save() {\n      if (this.paisForm.invalid) {\n        this.markAsDirtyInvalidControls(this.paisForm.controls);\n        this.notification.warning('Formulário precisa ser preenchido corretamente.');\n        return;\n      }\n\n      const pais = this.paisForm.value;\n      const operation = !!this.id ? this.paisService.update(this.id, pais) : this.paisService.save(pais);\n      const successMessage = !!this.id ? 'País atualizado com sucesso' : 'País salvo com sucesso';\n      operation.subscribe(() => {\n        this.notification.success(successMessage);\n        this.router.navigate(['app/paises']);\n      });\n    }\n\n    markAsDirtyInvalidControls(controls) {\n      for (const key in controls) {\n        if (controls.hasOwnProperty(key)) {\n          const control = controls[key];\n\n          if (control.invalid) {\n            control.markAsDirty();\n          }\n        }\n      }\n    }\n\n  }\n\n  PaisFormComponent.ɵfac = function PaisFormComponent_Factory(t) {\n    return new (t || PaisFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.PoNotificationService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.PaisesService));\n  };\n\n  PaisFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PaisFormComponent,\n    selectors: [[\"app-pais-form\"]],\n    decls: 13,\n    vars: 3,\n    consts: [[3, \"p-title\", \"p-save\", \"p-cancel\"], [3, \"formGroup\"], [1, \"po-row\"], [\"formControlName\", \"name\", \"p-label\", \"Nome\", 1, \"po-md-6\", \"po-lg-4\"], [\"formControlName\", \"email\", \"p-label\", \"Email\", 1, \"po-md-6\", \"po-lg-4\"], [\"formControlName\", \"birthday\", \"p-label\", \"Date de nascimento\", 1, \"po-md-6\", \"po-lg-4\"], [\"name\", \"cpf\", \"p-mask\", \"999.999.999-99\", \"formControlName\", \"cpf\", \"p-label\", \"CPF\", 1, \"po-md-6\"], [\"formControlName\", \"genre\", \"p-label\", \"Gen\\u00EAro\", 1, \"po-md-6\", 3, \"p-options\"], [\"p-label\", \"Endere\\u00E7o\"], [\"formControlName\", \"zipcode\", \"p-label\", \"CEP\", 1, \"po-md-6\"], [\"formControlName\", \"address_number\", \"p-label\", \"N\\u00FAmero\", 1, \"po-md-6\"]],\n    template: function PaisFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"po-page-edit\", 0);\n        i0.ɵɵlistener(\"p-save\", function PaisFormComponent_Template_po_page_edit_p_save_0_listener() {\n          return ctx.save();\n        })(\"p-cancel\", function PaisFormComponent_Template_po_page_edit_p_cancel_0_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵelementStart(1, \"form\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"po-input\", 3)(4, \"po-email\", 4)(5, \"po-datepicker\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelement(7, \"po-input\", 6)(8, \"po-radio-group\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"po-divider\", 8);\n        i0.ɵɵelementStart(10, \"div\", 2);\n        i0.ɵɵelement(11, \"po-input\", 9)(12, \"po-number\", 10);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"p-title\", ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.paisForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"p-options\", ctx.genreOptions);\n      }\n    },\n    directives: [i3.PoPageEditComponent, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i3.PoInputComponent, i2.NgControlStatus, i2.FormControlName, i3.PoEmailComponent, i3.PoDatepickerComponent, i3.PoRadioGroupComponent, i3.PoDividerComponent, i3.PoNumberComponent],\n    styles: [\"\"]\n  });\n  return PaisFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}