{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@po-ui/ng-components\";\nimport * as i4 from \"../tipoDocCarga.service\";\nexport let TipoDocCargaFormComponent = /*#__PURE__*/(() => {\n  class TipoDocCargaFormComponent {\n    constructor(activatedRoute, fb, notification, router, tipoDocCargaService) {\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.notification = notification;\n      this.router = router;\n      this.tipoDocCargaService = tipoDocCargaService;\n      this.title = 'TipoDocCarga - INCLUIR';\n      this.isTableLoading = false; // ======================================================================================================================\n\n      this.columns = [{\n        property: 'nickname',\n        label: 'Código'\n      }, {\n        property: 'name',\n        label: 'Descrição'\n      }];\n      this.advancedFilters = [{\n        property: 'nickname',\n        divider: 'Selection Informations',\n        optional: true,\n        gridColumns: 6,\n        label: 'Código'\n      }, {\n        property: 'name',\n        optional: true,\n        gridColumns: 6\n      }];\n      const {\n        id\n      } = this.activatedRoute.snapshot.params;\n      this.id = id;\n    }\n\n    ngOnInit() {\n      //this.isTableLoading = true;\n      this.tipoDocCargaForm = this.fb.group({\n        filial: [''],\n        tipo: ['', Validators.required],\n        descricao: ['', Validators.required],\n        tpTransp: [''],\n        sentido: [''],\n        tpContab: [''],\n        enviaEdiNfe: [''],\n        situacao: [''],\n        calculoFret: [''],\n        emitePreFat: [''],\n        dataEntAut: ['']\n      });\n      this.loadData(this.id);\n    }\n\n    loadData(id) {\n      if (id) {\n        this.tipoDocCargaService.get(id).subscribe(cidade => {\n          this.tipoDocCargaForm.patchValue(cidade);\n          this.title = \"TESTANDO CADASTRO CIDADES\";\n        });\n      }\n    }\n\n    cancel() {\n      window.history.back();\n    }\n\n    save() {\n      if (this.tipoDocCargaForm.invalid) {\n        this.markAsDirtyInvalidControls(this.tipoDocCargaForm.controls);\n        this.notification.warning('Formulário precisa ser preenchido corretamente.');\n        return;\n      }\n\n      const cidade = this.tipoDocCargaForm.value;\n      const operation = !!this.id ? this.tipoDocCargaService.update(this.id, cidade) : this.tipoDocCargaService.save(cidade);\n      const successMessage = !!this.id ? 'Cidade atualizada com sucesso' : 'Cidade salva com sucesso';\n      operation.subscribe(() => {\n        this.notification.success(successMessage);\n        this.router.navigate(['app/cidades']);\n      });\n    }\n\n    markAsDirtyInvalidControls(controls) {\n      for (const key in controls) {\n        if (controls.hasOwnProperty(key)) {\n          const control = controls[key];\n\n          if (control.invalid) {\n            control.markAsDirty();\n          }\n        }\n      }\n    }\n\n    fieldFormat(value) {\n      return `${value.label}`; // `${value.nickname} - ${value.label}`;\n    }\n\n  }\n\n  TipoDocCargaFormComponent.ɵfac = function TipoDocCargaFormComponent_Factory(t) {\n    return new (t || TipoDocCargaFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.PoNotificationService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.TipoDocCargaService));\n  };\n\n  TipoDocCargaFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TipoDocCargaFormComponent,\n    selectors: [[\"app-tipoDocCarga-form\"]],\n    decls: 14,\n    vars: 2,\n    consts: [[3, \"p-title\", \"p-save\", \"p-cancel\"], [3, \"formGroup\"], [1, \"po-row\"], [\"formControlName\", \"filial\", \"p-label\", \"Filial\", 1, \"po-lg-4\"], [\"formControlName\", \"tipo\", \"p-label\", \"Tipo\", 1, \"po-lg-2\"], [\"formControlName\", \"descricao\", \"p-label\", \"Descri\\u00E7\\u00E3o\", 1, \"po-lg-4\"], [\"formControlName\", \"tpTransp\", \"p-label\", \"Tipo Transp\", 1, \"po-lg-4\"], [\"formControlName\", \"sentido\", \"p-label\", \"Sentido\", 1, \"po-lg-4\"], [\"formControlName\", \"tpContab\", \"p-label\", \"Tipo Contab\", 1, \"po-lg-4\"], [\"formControlName\", \"enviaEdiNfe\", \"p-label\", \"Envia EDI NFE\", 1, \"po-lg-4\"], [\"formControlName\", \"situacao\", \"p-label\", \"Situa\\u00E7\\u00E3o\", 1, \"po-lg-4\"], [\"formControlName\", \"calculoFret\", \"p-label\", \"Calcula Frete?\", 1, \"po-lg-4\"], [\"formControlName\", \"emitePreFat\", \"p-label\", \"Emite Pre-Fat?\", 1, \"po-lg-4\"], [\"formControlName\", \"dataEntAut\", \"p-label\", \"Data Entr Aut\", 1, \"po-lg-4\"]],\n    template: function TipoDocCargaFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"po-page-edit\", 0);\n        i0.ɵɵlistener(\"p-save\", function TipoDocCargaFormComponent_Template_po_page_edit_p_save_0_listener() {\n          return ctx.save();\n        })(\"p-cancel\", function TipoDocCargaFormComponent_Template_po_page_edit_p_cancel_0_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵelementStart(1, \"form\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"po-input\", 3)(4, \"po-input\", 4)(5, \"po-input\", 5)(6, \"po-input\", 6)(7, \"po-input\", 7)(8, \"po-input\", 8)(9, \"po-input\", 9)(10, \"po-input\", 10)(11, \"po-input\", 11)(12, \"po-input\", 12)(13, \"po-input\", 13);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"p-title\", ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.tipoDocCargaForm);\n      }\n    },\n    styles: [\"\"]\n  });\n  return TipoDocCargaFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}