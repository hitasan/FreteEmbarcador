{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { UsuarioService } from '../usuario.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@po-ui/ng-components\";\nimport * as i4 from \"../usuario.service\";\nexport let UsuarioFormComponent = /*#__PURE__*/(() => {\n  class UsuarioFormComponent {\n    constructor(activatedRoute, fb, notification, router, usuarioService) {\n      this.activatedRoute = activatedRoute;\n      this.fb = fb;\n      this.notification = notification;\n      this.router = router;\n      this.usuarioService = usuarioService;\n      this.title = 'Novo usuário';\n      this.propertiesOptions = [{\n        value: 'required',\n        label: 'Trocar Senha'\n      }, {\n        value: 'block',\n        label: 'Bloquear Login'\n      }];\n      const {\n        id\n      } = this.activatedRoute.snapshot.params;\n      this.id = id;\n    }\n\n    ngOnInit() {\n      this.usuarioForm = this.fb.group({\n        login: ['', Validators.required],\n        nome: ['', Validators.required],\n        senha: ['', Validators.required],\n        email: ['', Validators.required],\n        cargo: [''],\n        status: [''],\n        datastatus: [''],\n        trocasenha: ['']\n      });\n      this.loadData(this.id);\n      this.restore();\n    }\n\n    loadData(id) {\n      if (id) {\n        this.usuarioService.get(id).subscribe(usuario => {\n          this.usuarioForm.patchValue(usuario);\n          this.title = usuario.login;\n        });\n      }\n    }\n\n    restore() {\n      this.input = undefined;\n      this.errorPattern = undefined; //this.event = undefined;\n\n      this.help = undefined;\n      this.label = undefined;\n      this.minlength = undefined;\n      this.maxlength = undefined; //this.password = undefined;\n\n      this.pattern = '';\n      this.placeholder = '';\n      this.properties = [];\n    }\n\n    cancel() {\n      window.history.back();\n    }\n\n    save() {\n      if (this.usuarioForm.invalid) {\n        this.markAsDirtyInvalidControls(this.usuarioForm.controls);\n        this.notification.warning('Formulário precisa ser preenchido corretamente.');\n        return;\n      }\n\n      const usuario = this.usuarioForm.value;\n      const operation = !!this.id ? this.usuarioService.update(this.id, usuario) : this.usuarioService.save(usuario);\n      const successMessage = !!this.id ? 'Registro de usuário atualizado com sucesso' : 'Registro salvo com sucesso';\n      operation.subscribe(() => {\n        this.notification.success(successMessage);\n        this.router.navigate(['app/usuarios']);\n      });\n    }\n\n    markAsDirtyInvalidControls(controls) {\n      for (const key in controls) {\n        if (controls.hasOwnProperty(key)) {\n          const control = controls[key];\n\n          if (control.invalid) {\n            control.markAsDirty();\n          }\n        }\n      }\n    }\n\n  }\n\n  UsuarioFormComponent.ɵfac = function UsuarioFormComponent_Factory(t) {\n    return new (t || UsuarioFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.PoNotificationService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.UsuarioService));\n  };\n\n  UsuarioFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UsuarioFormComponent,\n    selectors: [[\"app-usuario-form\"]],\n    features: [i0.ɵɵProvidersFeature([UsuarioService])],\n    decls: 16,\n    vars: 21,\n    consts: [[3, \"p-title\", \"p-save\", \"p-cancel\"], [3, \"formGroup\"], [1, \"po-row\"], [\"formControlName\", \"login\", \"p-label\", \"Login\", 1, \"po-lg-2\"], [\"formControlName\", \"nome\", \"p-label\", \"Nome Completo\", \"p-clean\", \"\", \"p-icon\", \"po-icon-user\", 1, \"po-lg-10\"], [\"name\", \"password\", 1, \"po-lg-4\", 3, \"p-clean\", \"p-disabled\", \"p-error-pattern\", \"p-help\", \"p-hide-password-peek\", \"p-label\", \"p-maxlength\", \"p-minlength\", \"p-no-autocomplete\", \"p-optional\", \"p-pattern\", \"p-placeholder\", \"p-readonly\", \"p-required\", \"p-blur\", \"p-change\", \"p-change-model\", \"p-enter\"], [\"formControlName\", \"confsenha\", \"p-label\", \"Confirmar Senha\", 1, \"po-lg-4\"], [\"formControlName\", \"email\", \"p-label\", \"E-mail\", \"p-clean\", \"\", 1, \"po-lg-4\"], [\"formControlName\", \"cargo\", \"p-label\", \"Cargo\", 1, \"po-lg-4\"], [\"formControlName\", \"status\", \"p-label\", \"Status\", 1, \"po-lg-2\"], [\"name\", \"startDate\", \"p-clean\", \"\", \"p-format\", \"dd/mm/yyyy\", \"p-label\", \"Data status\", \"p-disabled\", \"\", 1, \"po-lg-2\"], [\"name\", \"trocasenha\", \"p-columns\", \"2\", \"p-label\", \"Proximo login\", 1, \"po-lg-4\", 3, \"p-options\"]],\n    template: function UsuarioFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"po-page-edit\", 0);\n        i0.ɵɵlistener(\"p-save\", function UsuarioFormComponent_Template_po_page_edit_p_save_0_listener() {\n          return ctx.save();\n        })(\"p-cancel\", function UsuarioFormComponent_Template_po_page_edit_p_cancel_0_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵelementStart(1, \"form\", 1)(2, \"div\", 2)(3, \"div\", 2);\n        i0.ɵɵelement(4, \"po-input\", 3)(5, \"po-input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelement(7, \"po-password\", 5)(8, \"po-input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 2);\n        i0.ɵɵelement(10, \"po-input\", 7)(11, \"po-input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2);\n        i0.ɵɵelement(13, \"po-input\", 9)(14, \"po-datepicker\", 10)(15, \"po-checkbox-group\", 11);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"p-title\", ctx.title);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.usuarioForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"p-clean\", ctx.properties.includes(\"clean\"))(\"p-disabled\", ctx.properties.includes(\"disabled\"))(\"p-error-pattern\", ctx.errorPattern)(\"p-help\", ctx.help)(\"p-hide-password-peek\", ctx.properties.includes(\"hidepasswordpeek\"))(\"p-label\", ctx.label)(\"p-maxlength\", ctx.maxlength)(\"p-minlength\", ctx.minlength)(\"p-no-autocomplete\", ctx.properties == null ? null : ctx.properties.includes(\"noAutocomplete\"))(\"p-optional\", ctx.properties.includes(\"optional\"))(\"p-pattern\", ctx.pattern)(\"p-placeholder\", ctx.placeholder)(\"p-readonly\", ctx.properties.includes(\"readonly\"))(\"p-required\", ctx.properties.includes(\"required\"))(\"p-blur\", ctx.changeEvent(\"p-blur\"))(\"p-change\", ctx.changeEvent(\"p-change\"))(\"p-change-model\", ctx.changeEvent(\"p-change-model\"))(\"p-enter\", ctx.changeEvent(\"p-enter\"));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"p-options\", ctx.propertiesOptions);\n      }\n    },\n    directives: [i3.PoPageEditComponent, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i3.PoInputComponent, i2.NgControlStatus, i2.FormControlName, i3.PoPasswordComponent, i3.PoDatepickerComponent, i3.PoCheckboxGroupComponent],\n    styles: [\"\"]\n  });\n  return UsuarioFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}